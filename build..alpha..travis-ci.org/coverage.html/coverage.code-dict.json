{"/home/travis/build/npmtest/node-npmtest-inversify/test.js":"/* istanbul instrument in package npmtest_inversify */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-inversify/lib.npmtest_inversify.js":"/* istanbul instrument in package npmtest_inversify */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_inversify = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_inversify = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-inversify/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-inversify && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_inversify */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_inversify\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_inversify.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_inversify.rollup.js'] =\n            local.assetsDict['/assets.npmtest_inversify.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_inversify.__dirname + '/lib.npmtest_inversify.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/inversify.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar container_1 = require(\"./container/container\");\nexports.Container = container_1.Container;\nvar container_module_1 = require(\"./container/container_module\");\nexports.ContainerModule = container_module_1.ContainerModule;\nvar injectable_1 = require(\"./annotation/injectable\");\nexports.injectable = injectable_1.injectable;\nvar tagged_1 = require(\"./annotation/tagged\");\nexports.tagged = tagged_1.tagged;\nvar named_1 = require(\"./annotation/named\");\nexports.named = named_1.named;\nvar inject_1 = require(\"./annotation/inject\");\nexports.inject = inject_1.inject;\nvar optional_1 = require(\"./annotation/optional\");\nexports.optional = optional_1.optional;\nvar unmanaged_1 = require(\"./annotation/unmanaged\");\nexports.unmanaged = unmanaged_1.unmanaged;\nvar multi_inject_1 = require(\"./annotation/multi_inject\");\nexports.multiInject = multi_inject_1.multiInject;\nvar target_name_1 = require(\"./annotation/target_name\");\nexports.targetName = target_name_1.targetName;\nvar guid_1 = require(\"./utils/guid\");\nexports.guid = guid_1.guid;\nvar decorator_utils_1 = require(\"./annotation/decorator_utils\");\nexports.decorate = decorator_utils_1.decorate;\nvar constraint_helpers_1 = require(\"./syntax/constraint_helpers\");\nexports.traverseAncerstors = constraint_helpers_1.traverseAncerstors;\nexports.taggedConstraint = constraint_helpers_1.taggedConstraint;\nexports.namedConstraint = constraint_helpers_1.namedConstraint;\nexports.typeConstraint = constraint_helpers_1.typeConstraint;\nvar serialization_1 = require(\"./utils/serialization\");\nexports.getServiceIdentifierAsString = serialization_1.getServiceIdentifierAsString;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/container/container.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binding_1 = require(\"../bindings/binding\");\nvar lookup_1 = require(\"./lookup\");\nvar planner_1 = require(\"../planning/planner\");\nvar resolver_1 = require(\"../resolution/resolver\");\nvar binding_to_syntax_1 = require(\"../syntax/binding_to_syntax\");\nvar serialization_1 = require(\"../utils/serialization\");\nvar container_snapshot_1 = require(\"./container_snapshot\");\nvar guid_1 = require(\"../utils/guid\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar metadata_reader_1 = require(\"../planning/metadata_reader\");\nvar Container = (function () {\n    function Container(containerOptions) {\n        if (containerOptions !== undefined) {\n            if (typeof containerOptions !== \"object\") {\n                throw new Error(\"\" + ERROR_MSGS.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT);\n            }\n            else if (containerOptions.defaultScope === undefined) {\n                throw new Error(\"\" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);\n            }\n            else if (containerOptions.defaultScope !== literal_types_1.BindingScopeEnum.Singleton &&\n                containerOptions.defaultScope !== literal_types_1.BindingScopeEnum.Transient) {\n                throw new Error(\"\" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);\n            }\n            this.options = {\n                defaultScope: containerOptions.defaultScope\n            };\n        }\n        else {\n            this.options = {\n                defaultScope: literal_types_1.BindingScopeEnum.Transient\n            };\n        }\n        this.guid = guid_1.guid();\n        this._bindingDictionary = new lookup_1.Lookup();\n        this._snapshots = [];\n        this._middleware = null;\n        this.parent = null;\n        this._metadataReader = new metadata_reader_1.MetadataReader();\n    }\n    Container.merge = function (container1, container2) {\n        var container = new Container();\n        var bindingDictionary = planner_1.getBindingDictionary(container);\n        var bindingDictionary1 = planner_1.getBindingDictionary(container1);\n        var bindingDictionary2 = planner_1.getBindingDictionary(container2);\n        function copyDictionary(origing, destination) {\n            origing.traverse(function (key, value) {\n                value.forEach(function (binding) {\n                    destination.add(binding.serviceIdentifier, binding.clone());\n                });\n            });\n        }\n        copyDictionary(bindingDictionary1, bindingDictionary);\n        copyDictionary(bindingDictionary2, bindingDictionary);\n        return container;\n    };\n    Container.prototype.load = function () {\n        var _this = this;\n        var modules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            modules[_i] = arguments[_i];\n        }\n        var setModuleId = function (bindingToSyntax, moduleId) {\n            bindingToSyntax._binding.moduleId = moduleId;\n        };\n        var getBindFunction = function (moduleId) {\n            return function (serviceIdentifier) {\n                var bindingToSyntax = _this.bind.call(_this, serviceIdentifier);\n                setModuleId(bindingToSyntax, moduleId);\n                return bindingToSyntax;\n            };\n        };\n        var getUnbindFunction = function (moduleId) {\n            return function (serviceIdentifier) {\n                var _unbind = _this.unbind.bind(_this);\n                _unbind(serviceIdentifier);\n            };\n        };\n        var getIsboundFunction = function (moduleId) {\n            return function (serviceIdentifier) {\n                var _isBound = _this.isBound.bind(_this);\n                return _isBound(serviceIdentifier);\n            };\n        };\n        var getRebindFunction = function (moduleId) {\n            return function (serviceIdentifier) {\n                var bindingToSyntax = _this.rebind.call(_this, serviceIdentifier);\n                setModuleId(bindingToSyntax, moduleId);\n                return bindingToSyntax;\n            };\n        };\n        modules.forEach(function (module) {\n            var bindFunction = getBindFunction(module.guid);\n            var unbindFunction = getUnbindFunction(module.guid);\n            var isboundFunction = getIsboundFunction(module.guid);\n            var rebindFunction = getRebindFunction(module.guid);\n            module.registry(bindFunction, unbindFunction, isboundFunction, rebindFunction);\n        });\n    };\n    Container.prototype.unload = function () {\n        var _this = this;\n        var modules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            modules[_i] = arguments[_i];\n        }\n        var conditionFactory = function (expected) { return function (item) {\n            return item.moduleId === expected;\n        }; };\n        modules.forEach(function (module) {\n            var condition = conditionFactory(module.guid);\n            _this._bindingDictionary.removeByCondition(condition);\n        });\n    };\n    Container.prototype.bind = function (serviceIdentifier) {\n        var defaultScope = literal_types_1.BindingScopeEnum.Transient;\n        defaultScope = (this.options.defaultScope === defaultScope) ? defaultScope : literal_types_1.BindingScopeEnum.Singleton;\n        var binding = new binding_1.Binding(serviceIdentifier, defaultScope);\n        this._bindingDictionary.add(serviceIdentifier, binding);\n        return new binding_to_syntax_1.BindingToSyntax(binding);\n    };\n    Container.prototype.rebind = function (serviceIdentifier) {\n        this.unbind(serviceIdentifier);\n        return this.bind(serviceIdentifier);\n    };\n    Container.prototype.unbind = function (serviceIdentifier) {\n        try {\n            this._bindingDictionary.remove(serviceIdentifier);\n        }\n        catch (e) {\n            throw new Error(ERROR_MSGS.CANNOT_UNBIND + \" \" + serialization_1.getServiceIdentifierAsString(serviceIdentifier));\n        }\n    };\n    Container.prototype.unbindAll = function () {\n        this._bindingDictionary = new lookup_1.Lookup();\n    };\n    Container.prototype.isBound = function (serviceIdentifier) {\n        return this._bindingDictionary.hasKey(serviceIdentifier);\n    };\n    Container.prototype.isBoundNamed = function (serviceIdentifier, named) {\n        return this.isBoundTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\n    };\n    Container.prototype.isBoundTagged = function (serviceIdentifier, key, value) {\n        var bindings = this._bindingDictionary.get(serviceIdentifier);\n        var request = planner_1.createMockRequest(this, serviceIdentifier, key, value);\n        return bindings.some(function (b) { return b.constraint(request); });\n    };\n    Container.prototype.snapshot = function () {\n        this._snapshots.push(container_snapshot_1.ContainerSnapshot.of(this._bindingDictionary.clone(), this._middleware));\n    };\n    Container.prototype.restore = function () {\n        var snapshot = this._snapshots.pop();\n        if (snapshot === undefined) {\n            throw new Error(ERROR_MSGS.NO_MORE_SNAPSHOTS_AVAILABLE);\n        }\n        this._bindingDictionary = snapshot.bindings;\n        this._middleware = snapshot.middleware;\n    };\n    Container.prototype.createChild = function () {\n        var child = new Container();\n        child.parent = this;\n        return child;\n    };\n    Container.prototype.applyMiddleware = function () {\n        var middlewares = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            middlewares[_i] = arguments[_i];\n        }\n        var initial = (this._middleware) ? this._middleware : this._planAndResolve();\n        this._middleware = middlewares.reduce(function (prev, curr) {\n            return curr(prev);\n        }, initial);\n    };\n    Container.prototype.applyCustomMetadataReader = function (metadataReader) {\n        this._metadataReader = metadataReader;\n    };\n    Container.prototype.get = function (serviceIdentifier) {\n        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);\n    };\n    Container.prototype.getTagged = function (serviceIdentifier, key, value) {\n        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);\n    };\n    Container.prototype.getNamed = function (serviceIdentifier, named) {\n        return this.getTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\n    };\n    Container.prototype.getAll = function (serviceIdentifier) {\n        return this._get(true, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);\n    };\n    Container.prototype.getAllTagged = function (serviceIdentifier, key, value) {\n        return this._get(false, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);\n    };\n    Container.prototype.getAllNamed = function (serviceIdentifier, named) {\n        return this.getAllTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\n    };\n    Container.prototype.resolve = function (constructorFunction) {\n        var tempContainer = new Container();\n        tempContainer.bind(constructorFunction).toSelf();\n        tempContainer.parent = this;\n        return tempContainer.get(constructorFunction);\n    };\n    Container.prototype._get = function (avoidConstraints, isMultiInject, targetType, serviceIdentifier, key, value) {\n        var result = null;\n        var defaultArgs = {\n            avoidConstraints: avoidConstraints,\n            contextInterceptor: function (context) { return context; },\n            isMultiInject: isMultiInject,\n            key: key,\n            serviceIdentifier: serviceIdentifier,\n            targetType: targetType,\n            value: value\n        };\n        if (this._middleware) {\n            result = this._middleware(defaultArgs);\n            if (result === undefined || result === null) {\n                throw new Error(ERROR_MSGS.INVALID_MIDDLEWARE_RETURN);\n            }\n        }\n        else {\n            result = this._planAndResolve()(defaultArgs);\n        }\n        return result;\n    };\n    Container.prototype._planAndResolve = function () {\n        var _this = this;\n        return function (args) {\n            var context = planner_1.plan(_this._metadataReader, _this, args.isMultiInject, args.targetType, args.serviceIdentifier, args.key, args.value, args.avoidConstraints);\n            context = args.contextInterceptor(context);\n            var result = resolver_1.resolve(context);\n            return result;\n        };\n    };\n    return Container;\n}());\nexports.Container = Container;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/bindings/binding.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar guid_1 = require(\"../utils/guid\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar Binding = (function () {\n    function Binding(serviceIdentifier, defaultScope) {\n        this.guid = guid_1.guid();\n        this.activated = false;\n        this.serviceIdentifier = serviceIdentifier;\n        this.scope = defaultScope;\n        this.type = literal_types_1.BindingTypeEnum.Invalid;\n        this.constraint = function (request) { return true; };\n        this.implementationType = null;\n        this.cache = null;\n        this.factory = null;\n        this.provider = null;\n        this.onActivation = null;\n        this.dynamicValue = null;\n    }\n    Binding.prototype.clone = function () {\n        var clone = new Binding(this.serviceIdentifier, this.scope);\n        clone.activated = false;\n        clone.implementationType = this.implementationType;\n        clone.dynamicValue = this.dynamicValue;\n        clone.scope = this.scope;\n        clone.type = this.type;\n        clone.factory = this.factory;\n        clone.provider = this.provider;\n        clone.constraint = this.constraint;\n        clone.onActivation = this.onActivation;\n        clone.cache = this.cache;\n        return clone;\n    };\n    return Binding;\n}());\nexports.Binding = Binding;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/utils/guid.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction guid() {\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" +\n        s4() + \"-\" + s4() + s4() + s4();\n}\nexports.guid = guid;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/constants/literal_types.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BindingScopeEnum = {\n    Singleton: \"Singleton\",\n    Transient: \"Transient\"\n};\nexports.BindingScopeEnum = BindingScopeEnum;\nvar BindingTypeEnum = {\n    ConstantValue: \"ConstantValue\",\n    Constructor: \"Constructor\",\n    DynamicValue: \"DynamicValue\",\n    Factory: \"Factory\",\n    Function: \"Function\",\n    Instance: \"Instance\",\n    Invalid: \"Invalid\",\n    Provider: \"Provider\"\n};\nexports.BindingTypeEnum = BindingTypeEnum;\nvar TargetTypeEnum = {\n    ClassProperty: \"ClassProperty\",\n    ConstructorArgument: \"ConstructorArgument\",\n    Variable: \"Variable\"\n};\nexports.TargetTypeEnum = TargetTypeEnum;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/container/lookup.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar Lookup = (function () {\n    function Lookup() {\n        this._map = new Map();\n    }\n    Lookup.prototype.getMap = function () {\n        return this._map;\n    };\n    Lookup.prototype.add = function (serviceIdentifier, value) {\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n        }\n        ;\n        if (value === null || value === undefined) {\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n        }\n        ;\n        var entry = this._map.get(serviceIdentifier);\n        if (entry !== undefined) {\n            entry.push(value);\n            this._map.set(serviceIdentifier, entry);\n        }\n        else {\n            this._map.set(serviceIdentifier, [value]);\n        }\n    };\n    Lookup.prototype.get = function (serviceIdentifier) {\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n        }\n        var entry = this._map.get(serviceIdentifier);\n        if (entry !== undefined) {\n            return entry;\n        }\n        else {\n            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);\n        }\n    };\n    Lookup.prototype.remove = function (serviceIdentifier) {\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n        }\n        if (!this._map.delete(serviceIdentifier)) {\n            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);\n        }\n    };\n    Lookup.prototype.removeByCondition = function (condition) {\n        var _this = this;\n        this._map.forEach(function (entries, key) {\n            var updatedEntries = entries.filter(function (entry) { return !condition(entry); });\n            if (updatedEntries.length > 0) {\n                _this._map.set(key, updatedEntries);\n            }\n            else {\n                _this._map.delete(key);\n            }\n        });\n    };\n    Lookup.prototype.hasKey = function (serviceIdentifier) {\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n        }\n        return this._map.has(serviceIdentifier);\n    };\n    Lookup.prototype.clone = function () {\n        var copy = new Lookup();\n        this._map.forEach(function (value, key) {\n            value.forEach(function (b) { return copy.add(key, b.clone()); });\n        });\n        return copy;\n    };\n    Lookup.prototype.traverse = function (func) {\n        this._map.forEach(function (value, key) {\n            func(key, value);\n        });\n    };\n    ;\n    return Lookup;\n}());\nexports.Lookup = Lookup;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/constants/error_msgs.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DUPLICATED_INJECTABLE_DECORATOR = \"Cannot apply @injectable decorator multiple times.\";\nexports.DUPLICATED_METADATA = \"Metadata key was used more than once in a parameter:\";\nexports.NULL_ARGUMENT = \"NULL argument\";\nexports.KEY_NOT_FOUND = \"Key Not Found\";\nexports.AMBIGUOUS_MATCH = \"Ambiguous match found for serviceIdentifier:\";\nexports.CANNOT_UNBIND = \"Could not unbind serviceIdentifier:\";\nexports.NOT_REGISTERED = \"No matching bindings found for serviceIdentifier:\";\nexports.MISSING_INJECTABLE_ANNOTATION = \"Missing required @injectable annotation in:\";\nexports.MISSING_INJECT_ANNOTATION = \"Missing required @inject or @multiInject annotation in:\";\nexports.CIRCULAR_DEPENDENCY = \"Circular dependency found:\";\nexports.NOT_IMPLEMENTED = \"Sorry, this feature is not fully implemented yet.\";\nexports.INVALID_BINDING_TYPE = \"Invalid binding type:\";\nexports.NO_MORE_SNAPSHOTS_AVAILABLE = \"No snapshot available to restore.\";\nexports.INVALID_MIDDLEWARE_RETURN = \"Invalid return type in middleware. Middleware must return!\";\nexports.INVALID_FUNCTION_BINDING = \"Value provided to function binding must be a function!\";\nexports.INVALID_TO_SELF_VALUE = \"The toSelf function can only be applied when a constructor is \" +\n    \"used as service identifier\";\nexports.INVALID_DECORATOR_OPERATION = \"The @inject @multiInject @tagged and @named decorators \" +\n    \"must be applied to the parameters of a class constructor or a class property.\";\nexports.ARGUMENTS_LENGTH_MISMATCH_1 = \"The number of constructor arguments in the derived class \";\nexports.ARGUMENTS_LENGTH_MISMATCH_2 = \" must be >= than the number of constructor arguments of its base class.\";\nexports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = \"Invalid Container constructor argument. Container options \" +\n    \"must be an object.\";\nexports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = \"Invalid Container option. Default scope must \" +\n    \"be a string ('singleton' or 'transient').\";\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/planning/planner.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar plan_1 = require(\"./plan\");\nvar context_1 = require(\"./context\");\nvar request_1 = require(\"./request\");\nvar target_1 = require(\"./target\");\nvar binding_count_1 = require(\"../bindings/binding_count\");\nvar reflection_utils_1 = require(\"./reflection_utils\");\nvar metadata_1 = require(\"../planning/metadata\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar serialization_1 = require(\"../utils/serialization\");\nfunction getBindingDictionary(cntnr) {\n    return cntnr._bindingDictionary;\n}\nexports.getBindingDictionary = getBindingDictionary;\nfunction _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {\n    var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;\n    var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);\n    var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);\n    if (key !== undefined) {\n        var tagMetadata = new metadata_1.Metadata(key, value);\n        target.metadata.push(tagMetadata);\n    }\n    return target;\n}\nfunction _getActiveBindings(avoidConstraints, context, parentRequest, target) {\n    var bindings = getBindings(context.container, target.serviceIdentifier);\n    var activeBindings = [];\n    if (avoidConstraints === false) {\n        activeBindings = bindings.filter(function (binding) {\n            var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);\n            return binding.constraint(request);\n        });\n    }\n    else {\n        activeBindings = bindings;\n    }\n    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);\n    return activeBindings;\n}\nfunction _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {\n    switch (bindings.length) {\n        case binding_count_1.BindingCount.NoBindingsAvailable:\n            if (target.isOptional() === true) {\n                return bindings;\n            }\n            else {\n                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n                var msg = ERROR_MSGS.NOT_REGISTERED;\n                msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);\n                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n                throw new Error(msg);\n            }\n        case binding_count_1.BindingCount.OnlyOneBindingAvailable:\n            if (target.isArray() === false) {\n                return bindings;\n            }\n        case binding_count_1.BindingCount.MultipleBindingsAvailable:\n        default:\n            if (target.isArray() === false) {\n                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier), msg = ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifierString;\n                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n                throw new Error(msg);\n            }\n            else {\n                return bindings;\n            }\n    }\n}\nfunction _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {\n    try {\n        var activeBindings = void 0;\n        var childRequest_1;\n        if (parentRequest === null) {\n            activeBindings = _getActiveBindings(avoidConstraints, context, null, target);\n            childRequest_1 = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);\n            var plan_2 = new plan_1.Plan(context, childRequest_1);\n            context.addPlan(plan_2);\n        }\n        else {\n            activeBindings = _getActiveBindings(avoidConstraints, context, parentRequest, target);\n            childRequest_1 = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);\n        }\n        activeBindings.forEach(function (binding) {\n            var subChildRequest = null;\n            if (target.isArray()) {\n                subChildRequest = childRequest_1.addChildRequest(binding.serviceIdentifier, binding, target);\n            }\n            else {\n                subChildRequest = childRequest_1;\n            }\n            if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {\n                var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);\n                dependencies.forEach(function (dependency) {\n                    _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);\n                });\n            }\n        });\n    }\n    catch (error) {\n        if (error instanceof RangeError && parentRequest !== null) {\n            serialization_1.circularDependencyToException(parentRequest.parentContext.plan.rootRequest);\n        }\n        else {\n            throw new Error(error.message);\n        }\n    }\n}\nfunction getBindings(container, serviceIdentifier) {\n    var bindings = [];\n    var bindingDictionary = getBindingDictionary(container);\n    if (bindingDictionary.hasKey(serviceIdentifier)) {\n        bindings = bindingDictionary.get(serviceIdentifier);\n    }\n    else if (container.parent !== null) {\n        bindings = getBindings(container.parent, serviceIdentifier);\n    }\n    return bindings;\n}\nfunction plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {\n    if (avoidConstraints === void 0) { avoidConstraints = false; }\n    var context = new context_1.Context(container);\n    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, \"\", key, value);\n    _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);\n    return context;\n}\nexports.plan = plan;\nfunction createMockRequest(container, serviceIdentifier, key, value) {\n    var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, \"\", serviceIdentifier, new metadata_1.Metadata(key, value));\n    var context = new context_1.Context(container);\n    var request = new request_1.Request(serviceIdentifier, context, null, [], target);\n    return request;\n}\nexports.createMockRequest = createMockRequest;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/planning/plan.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Plan = (function () {\n    function Plan(parentContext, rootRequest) {\n        this.parentContext = parentContext;\n        this.rootRequest = rootRequest;\n    }\n    return Plan;\n}());\nexports.Plan = Plan;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/planning/context.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar guid_1 = require(\"../utils/guid\");\nvar Context = (function () {\n    function Context(container) {\n        this.guid = guid_1.guid();\n        this.container = container;\n    }\n    Context.prototype.addPlan = function (plan) {\n        this.plan = plan;\n    };\n    return Context;\n}());\nexports.Context = Context;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/planning/request.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar guid_1 = require(\"../utils/guid\");\nvar Request = (function () {\n    function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {\n        this.guid = guid_1.guid();\n        this.serviceIdentifier = serviceIdentifier;\n        this.parentContext = parentContext;\n        this.parentRequest = parentRequest;\n        this.target = target;\n        this.childRequests = [];\n        this.bindings = (Array.isArray(bindings) ? bindings : [bindings]);\n    }\n    Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {\n        var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);\n        this.childRequests.push(child);\n        return child;\n    };\n    return Request;\n}());\nexports.Request = Request;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/planning/target.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata_1 = require(\"../planning/metadata\");\nvar queryable_string_1 = require(\"./queryable_string\");\nvar guid_1 = require(\"../utils/guid\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar Target = (function () {\n    function Target(type, name, serviceIdentifier, namedOrTagged) {\n        this.guid = guid_1.guid();\n        this.type = type;\n        this.serviceIdentifier = serviceIdentifier;\n        this.name = new queryable_string_1.QueryableString(name || \"\");\n        this.metadata = new Array();\n        var metadataItem = null;\n        if (typeof namedOrTagged === \"string\") {\n            metadataItem = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);\n        }\n        else if (namedOrTagged instanceof metadata_1.Metadata) {\n            metadataItem = namedOrTagged;\n        }\n        if (metadataItem !== null) {\n            this.metadata.push(metadataItem);\n        }\n    }\n    Target.prototype.hasTag = function (key) {\n        for (var i = 0; i < this.metadata.length; i++) {\n            var m = this.metadata[i];\n            if (m.key === key) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Target.prototype.isArray = function () {\n        return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);\n    };\n    Target.prototype.matchesArray = function (name) {\n        return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);\n    };\n    Target.prototype.isNamed = function () {\n        return this.hasTag(METADATA_KEY.NAMED_TAG);\n    };\n    Target.prototype.isTagged = function () {\n        return this.metadata.some(function (m) {\n            return (m.key !== METADATA_KEY.INJECT_TAG) &&\n                (m.key !== METADATA_KEY.MULTI_INJECT_TAG) &&\n                (m.key !== METADATA_KEY.NAME_TAG) &&\n                (m.key !== METADATA_KEY.UNMANAGED_TAG) &&\n                (m.key !== METADATA_KEY.NAMED_TAG);\n        });\n    };\n    Target.prototype.isOptional = function () {\n        return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);\n    };\n    Target.prototype.getNamedTag = function () {\n        if (this.isNamed()) {\n            return this.metadata.filter(function (m) { return m.key === METADATA_KEY.NAMED_TAG; })[0];\n        }\n        return null;\n    };\n    Target.prototype.getCustomTags = function () {\n        if (this.isTagged()) {\n            return this.metadata.filter(function (m) {\n                return (m.key !== METADATA_KEY.INJECT_TAG) &&\n                    (m.key !== METADATA_KEY.MULTI_INJECT_TAG) &&\n                    (m.key !== METADATA_KEY.NAME_TAG) &&\n                    (m.key !== METADATA_KEY.UNMANAGED_TAG) &&\n                    (m.key !== METADATA_KEY.NAMED_TAG);\n            });\n        }\n        return null;\n    };\n    Target.prototype.matchesNamedTag = function (name) {\n        return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);\n    };\n    Target.prototype.matchesTag = function (key) {\n        var _this = this;\n        return function (value) {\n            for (var i = 0; i < _this.metadata.length; i++) {\n                var m = _this.metadata[i];\n                if (m.key === key && m.value === value) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    return Target;\n}());\nexports.Target = Target;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/planning/metadata.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar Metadata = (function () {\n    function Metadata(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    Metadata.prototype.toString = function () {\n        if (this.key === METADATA_KEY.NAMED_TAG) {\n            return \"named: \" + this.value.toString() + \" \";\n        }\n        else {\n            return \"tagged: { key:\" + this.key.toString() + \", value: \" + this.value + \" }\";\n        }\n    };\n    return Metadata;\n}());\nexports.Metadata = Metadata;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/constants/metadata_keys.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMED_TAG = \"named\";\nexports.NAME_TAG = \"name\";\nexports.UNMANAGED_TAG = \"unmanaged\";\nexports.OPTIONAL_TAG = \"optional\";\nexports.INJECT_TAG = \"inject\";\nexports.MULTI_INJECT_TAG = \"multi_inject\";\nexports.TAGGED = \"inversify:tagged\";\nexports.TAGGED_PROP = \"inversify:tagged_props\";\nexports.PARAM_TYPES = \"inversify:paramtypes\";\nexports.DESIGN_PARAM_TYPES = \"design:paramtypes\";\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/planning/queryable_string.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryableString = (function () {\n    function QueryableString(str) {\n        this.str = str;\n    }\n    QueryableString.prototype.startsWith = function (searchString) {\n        return this.str.indexOf(searchString) === 0;\n    };\n    QueryableString.prototype.endsWith = function (searchString) {\n        var reverseString = \"\";\n        var reverseSearchString = searchString.split(\"\").reverse().join(\"\");\n        reverseString = this.str.split(\"\").reverse().join(\"\");\n        return this.startsWith.call({ str: reverseString }, reverseSearchString);\n    };\n    QueryableString.prototype.contains = function (searchString) {\n        return (this.str.indexOf(searchString) !== -1);\n    };\n    QueryableString.prototype.equals = function (compareString) {\n        return this.str === compareString;\n    };\n    QueryableString.prototype.value = function () {\n        return this.str;\n    };\n    return QueryableString;\n}());\nexports.QueryableString = QueryableString;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/bindings/binding_count.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BindingCount = {\n    MultipleBindingsAvailable: 2,\n    NoBindingsAvailable: 0,\n    OnlyOneBindingAvailable: 1\n};\nexports.BindingCount = BindingCount;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/planning/reflection_utils.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar serialization_1 = require(\"../utils/serialization\");\nvar target_1 = require(\"./target\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nfunction getDependencies(metadataReader, func) {\n    var constructorName = serialization_1.getFunctionName(func);\n    var targets = getTargets(metadataReader, constructorName, func, false);\n    return targets;\n}\nexports.getDependencies = getDependencies;\nfunction getTargets(metadataReader, constructorName, func, isBaseClass) {\n    var metadata = metadataReader.getConstrucotorMetadata(func);\n    var serviceIdentifiers = metadata.compilerGeneratedMetadata;\n    if (serviceIdentifiers === undefined) {\n        var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + \" \" + constructorName + \".\";\n        throw new Error(msg);\n    }\n    var constructorArgsMetadata = metadata.userGeneratedMetadata;\n    var keys = Object.keys(constructorArgsMetadata);\n    var hasUserDeclaredUnknownInjections = (func.length === 0 && keys.length > 0);\n    var iterations = (hasUserDeclaredUnknownInjections) ? keys.length : func.length;\n    var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);\n    var propertyTargets = getClassPropsAsTargets(metadataReader, func);\n    var targets = constructorTargets.concat(propertyTargets);\n    var baseClassDepencencyCount = getBaseClassDepencencyCount(metadataReader, func);\n    if (targets.length < baseClassDepencencyCount) {\n        var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH_1 +\n            constructorName + ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH_2;\n        throw new Error(error);\n    }\n    return targets;\n}\nfunction getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {\n    var targetMetadata = constructorArgsMetadata[index.toString()] || [];\n    var metadata = formatTargetMetadata(targetMetadata);\n    var isManaged = metadata.unmanaged !== true;\n    var serviceIndentifier = serviceIdentifiers[index];\n    var injectIndentifier = (metadata.inject || metadata.multiInject);\n    serviceIndentifier = (injectIndentifier) ? (injectIndentifier) : serviceIndentifier;\n    if (isManaged === true) {\n        var isObject = serviceIndentifier === Object;\n        var isFunction = serviceIndentifier === Function;\n        var isUndefined = serviceIndentifier === undefined;\n        var isUnknownType = (isObject || isFunction || isUndefined);\n        if (isBaseClass === false && isUnknownType) {\n            var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + \" argument \" + index + \" in class \" + constructorName + \".\";\n            throw new Error(msg);\n        }\n        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIndentifier);\n        target.metadata = targetMetadata;\n        return target;\n    }\n    return null;\n}\nfunction getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {\n    var targets = [];\n    for (var i = 0; i < iterations; i++) {\n        var index = i;\n        var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);\n        if (target !== null) {\n            targets.push(target);\n        }\n    }\n    return targets;\n}\nfunction getClassPropsAsTargets(metadataReader, constructorFunc) {\n    var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);\n    var targets = [];\n    var keys = Object.keys(classPropsMetadata);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var targetMetadata = classPropsMetadata[key];\n        var metadata = formatTargetMetadata(classPropsMetadata[key]);\n        var targetName = metadata.targetName || key;\n        var serviceIndentifier = (metadata.inject || metadata.multiInject);\n        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ClassProperty, targetName, serviceIndentifier);\n        target.metadata = targetMetadata;\n        targets.push(target);\n    }\n    var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;\n    if (baseConstructor !== Object) {\n        var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor);\n        targets = targets.concat(baseTargets);\n    }\n    return targets;\n}\nfunction getBaseClassDepencencyCount(metadataReader, func) {\n    var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;\n    if (baseConstructor !== Object) {\n        var baseConstructorName = serialization_1.getFunctionName(func);\n        var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);\n        var metadata = targets.map(function (t) {\n            return t.metadata.filter(function (m) {\n                return m.key === METADATA_KEY.UNMANAGED_TAG;\n            });\n        });\n        var unmanagedCount = [].concat.apply([], metadata).length;\n        var dependencyCount = targets.length - unmanagedCount;\n        if (dependencyCount > 0) {\n            return dependencyCount;\n        }\n        else {\n            return getBaseClassDepencencyCount(metadataReader, baseConstructor);\n        }\n    }\n    else {\n        return 0;\n    }\n}\nfunction formatTargetMetadata(targetMetadata) {\n    var targetMetadataMap = {};\n    targetMetadata.forEach(function (m) {\n        targetMetadataMap[m.key.toString()] = m.value;\n    });\n    return {\n        inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],\n        multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],\n        targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],\n        unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]\n    };\n}\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/utils/serialization.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nfunction getServiceIdentifierAsString(serviceIdentifier) {\n    if (typeof serviceIdentifier === \"function\") {\n        var _serviceIdentifier = serviceIdentifier;\n        return _serviceIdentifier.name;\n    }\n    else if (typeof serviceIdentifier === \"symbol\") {\n        return serviceIdentifier.toString();\n    }\n    else {\n        var _serviceIdentifier = serviceIdentifier;\n        return _serviceIdentifier;\n    }\n}\nexports.getServiceIdentifierAsString = getServiceIdentifierAsString;\nfunction listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {\n    var registeredBindingsList = \"\";\n    var registeredBindings = getBindings(container, serviceIdentifier);\n    if (registeredBindings.length !== 0) {\n        registeredBindingsList = \"\\nRegistered bindings:\";\n        registeredBindings.forEach(function (binding) {\n            var name = \"Object\";\n            if (binding.implementationType !== null) {\n                name = getFunctionName(binding.implementationType);\n            }\n            registeredBindingsList = registeredBindingsList + \"\\n \" + name;\n            if (binding.constraint.metaData) {\n                registeredBindingsList = registeredBindingsList + \" - \" + binding.constraint.metaData;\n            }\n        });\n    }\n    return registeredBindingsList;\n}\nexports.listRegisteredBindingsForServiceIdentifier = listRegisteredBindingsForServiceIdentifier;\nfunction circularDependencyToException(request, previousServiceIdentifiers) {\n    if (previousServiceIdentifiers === void 0) { previousServiceIdentifiers = []; }\n    var parentServiceIdentifier = getServiceIdentifierAsString(request.serviceIdentifier);\n    previousServiceIdentifiers.push(parentServiceIdentifier);\n    request.childRequests.forEach(function (childRequest) {\n        var childServiceIdentifier = getServiceIdentifierAsString(childRequest.serviceIdentifier);\n        if (previousServiceIdentifiers.indexOf(childServiceIdentifier) === -1) {\n            if (childRequest.childRequests.length > 0) {\n                circularDependencyToException(childRequest, previousServiceIdentifiers);\n            }\n            else {\n                previousServiceIdentifiers.push(childServiceIdentifier);\n            }\n        }\n        else {\n            previousServiceIdentifiers.push(childServiceIdentifier);\n            var services = previousServiceIdentifiers.reduce(function (prev, curr) {\n                return (prev !== \"\") ? prev + \" -> \" + curr : \"\" + curr;\n            }, \"\");\n            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + \" \" + services);\n        }\n    });\n}\nexports.circularDependencyToException = circularDependencyToException;\nfunction listMetadataForTarget(serviceIdentifierString, target) {\n    if (target.isTagged() || target.isNamed()) {\n        var m_1 = \"\";\n        var namedTag = target.getNamedTag();\n        var otherTags = target.getCustomTags();\n        if (namedTag !== null) {\n            m_1 += namedTag.toString() + \"\\n\";\n        }\n        if (otherTags !== null) {\n            otherTags.forEach(function (tag) {\n                m_1 += tag.toString() + \"\\n\";\n            });\n        }\n        return \" \" + serviceIdentifierString + \"\\n \" + serviceIdentifierString + \" - \" + m_1;\n    }\n    else {\n        return \" \" + serviceIdentifierString;\n    }\n}\nexports.listMetadataForTarget = listMetadataForTarget;\nfunction getFunctionName(v) {\n    if (v.name) {\n        return v.name;\n    }\n    else {\n        var name_1 = v.toString();\n        var match = name_1.match(/^function\\s*([^\\s(]+)/);\n        return match ? match[1] : \"Anonymous function: \" + name_1;\n    }\n}\nexports.getFunctionName = getFunctionName;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/resolution/resolver.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar serialization_1 = require(\"../utils/serialization\");\nvar instantiation_1 = require(\"./instantiation\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nfunction _resolveRequest(request) {\n    var bindings = request.bindings;\n    var childRequests = request.childRequests;\n    var targetIsAnAray = request.target && request.target.isArray();\n    var targetParentIsNotAnArray = !request.parentRequest ||\n        !request.parentRequest.target ||\n        !request.target ||\n        !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);\n    if (targetIsAnAray && targetParentIsNotAnArray) {\n        return childRequests.map(function (childRequest) {\n            return _resolveRequest(childRequest);\n        });\n    }\n    else {\n        var result = null;\n        if (request.target.isOptional() === true && bindings.length === 0) {\n            return undefined;\n        }\n        var binding = bindings[0];\n        var isSingleton = binding.scope === literal_types_1.BindingScopeEnum.Singleton;\n        if (isSingleton && binding.activated === true) {\n            return binding.cache;\n        }\n        if (binding.type === literal_types_1.BindingTypeEnum.ConstantValue) {\n            result = binding.cache;\n        }\n        else if (binding.type === literal_types_1.BindingTypeEnum.Function) {\n            result = binding.cache;\n        }\n        else if (binding.type === literal_types_1.BindingTypeEnum.Constructor) {\n            result = binding.implementationType;\n        }\n        else if (binding.type === literal_types_1.BindingTypeEnum.DynamicValue && binding.dynamicValue !== null) {\n            result = binding.dynamicValue(request.parentContext);\n        }\n        else if (binding.type === literal_types_1.BindingTypeEnum.Factory && binding.factory !== null) {\n            result = binding.factory(request.parentContext);\n        }\n        else if (binding.type === literal_types_1.BindingTypeEnum.Provider && binding.provider !== null) {\n            result = binding.provider(request.parentContext);\n        }\n        else if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {\n            result = instantiation_1.resolveInstance(binding.implementationType, childRequests, _resolveRequest);\n        }\n        else {\n            var serviceIdentifier = serialization_1.getServiceIdentifierAsString(request.serviceIdentifier);\n            throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + \" \" + serviceIdentifier);\n        }\n        if (typeof binding.onActivation === \"function\") {\n            result = binding.onActivation(request.parentContext, result);\n        }\n        if (isSingleton) {\n            binding.cache = result;\n            binding.activated = true;\n        }\n        return result;\n    }\n}\nfunction resolve(context) {\n    return _resolveRequest(context.plan.rootRequest);\n}\nexports.resolve = resolve;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/resolution/instantiation.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar literal_types_1 = require(\"../constants/literal_types\");\nfunction _injectProperties(instance, childRequests, resolveRequest) {\n    var propertyInjectionsRequests = childRequests.filter(function (childRequest) {\n        return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ClassProperty);\n    });\n    var propertyInjections = propertyInjectionsRequests.map(function (childRequest) {\n        return resolveRequest(childRequest);\n    });\n    propertyInjectionsRequests.forEach(function (r, index) {\n        var propertyName = \"\";\n        propertyName = r.target.name.value();\n        var injection = propertyInjections[index];\n        instance[propertyName] = injection;\n    });\n    return instance;\n}\nfunction _createInstance(Func, injections) {\n    return new (Func.bind.apply(Func, [void 0].concat(injections)))();\n}\nfunction resolveInstance(constr, childRequests, resolveRequest) {\n    var result = null;\n    if (childRequests.length > 0) {\n        var constructorInjectionsRequests = childRequests.filter(function (childRequest) {\n            return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ConstructorArgument);\n        });\n        var constructorInjections = constructorInjectionsRequests.map(function (childRequest) {\n            return resolveRequest(childRequest);\n        });\n        result = _createInstance(constr, constructorInjections);\n        result = _injectProperties(result, childRequests, resolveRequest);\n    }\n    else {\n        result = new constr();\n    }\n    return result;\n}\nexports.resolveInstance = resolveInstance;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/syntax/binding_to_syntax.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binding_in_when_on_syntax_1 = require(\"./binding_in_when_on_syntax\");\nvar binding_when_on_syntax_1 = require(\"./binding_when_on_syntax\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar BindingToSyntax = (function () {\n    function BindingToSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingToSyntax.prototype.to = function (constructor) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Instance;\n        this._binding.implementationType = constructor;\n        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toSelf = function () {\n        if (typeof this._binding.serviceIdentifier !== \"function\") {\n            throw new Error(\"\" + ERROR_MSGS.INVALID_TO_SELF_VALUE);\n        }\n        var self = this._binding.serviceIdentifier;\n        return this.to(self);\n    };\n    BindingToSyntax.prototype.toConstantValue = function (value) {\n        this._binding.type = literal_types_1.BindingTypeEnum.ConstantValue;\n        this._binding.cache = value;\n        this._binding.dynamicValue = null;\n        this._binding.implementationType = null;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toDynamicValue = function (func) {\n        this._binding.type = literal_types_1.BindingTypeEnum.DynamicValue;\n        this._binding.cache = null;\n        this._binding.dynamicValue = func;\n        this._binding.implementationType = null;\n        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toConstructor = function (constructor) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Constructor;\n        this._binding.implementationType = constructor;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toFactory = function (factory) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Factory;\n        this._binding.factory = factory;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toFunction = function (func) {\n        if (typeof func !== \"function\") {\n            throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);\n        }\n        ;\n        var bindingWhenOnSyntax = this.toConstantValue(func);\n        this._binding.type = literal_types_1.BindingTypeEnum.Function;\n        return bindingWhenOnSyntax;\n    };\n    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Factory;\n        this._binding.factory = function (context) {\n            return function () {\n                return context.container.get(serviceIdentifier);\n            };\n        };\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toProvider = function (provider) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Provider;\n        this._binding.provider = provider;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    return BindingToSyntax;\n}());\nexports.BindingToSyntax = BindingToSyntax;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binding_in_syntax_1 = require(\"./binding_in_syntax\");\nvar binding_when_syntax_1 = require(\"./binding_when_syntax\");\nvar binding_on_syntax_1 = require(\"./binding_on_syntax\");\nvar BindingInWhenOnSyntax = (function () {\n    function BindingInWhenOnSyntax(binding) {\n        this._binding = binding;\n        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);\n        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        this._bindingInSyntax = new binding_in_syntax_1.BindingInSyntax(binding);\n    }\n    BindingInWhenOnSyntax.prototype.inSingletonScope = function () {\n        return this._bindingInSyntax.inSingletonScope();\n    };\n    BindingInWhenOnSyntax.prototype.inTransientScope = function () {\n        return this._bindingInSyntax.inTransientScope();\n    };\n    BindingInWhenOnSyntax.prototype.when = function (constraint) {\n        return this._bindingWhenSyntax.when(constraint);\n    };\n    BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {\n        return this._bindingWhenSyntax.whenTargetNamed(name);\n    };\n    BindingInWhenOnSyntax.prototype.whenTargetIsDefault = function () {\n        return this._bindingWhenSyntax.whenTargetIsDefault();\n    };\n    BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenTargetTagged(tag, value);\n    };\n    BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {\n        return this._bindingWhenSyntax.whenInjectedInto(parent);\n    };\n    BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {\n        return this._bindingWhenSyntax.whenParentNamed(name);\n    };\n    BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenParentTagged(tag, value);\n    };\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);\n    };\n    BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);\n    };\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {\n        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);\n    };\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);\n    };\n    BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {\n        return this._bindingWhenSyntax.whenNoAncestorNamed(name);\n    };\n    BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);\n    };\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);\n    };\n    BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);\n    };\n    BindingInWhenOnSyntax.prototype.onActivation = function (handler) {\n        return this._bindingOnSyntax.onActivation(handler);\n    };\n    return BindingInWhenOnSyntax;\n}());\nexports.BindingInWhenOnSyntax = BindingInWhenOnSyntax;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/syntax/binding_in_syntax.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar binding_when_on_syntax_1 = require(\"./binding_when_on_syntax\");\nvar BindingInSyntax = (function () {\n    function BindingInSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingInSyntax.prototype.inSingletonScope = function () {\n        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingInSyntax.prototype.inTransientScope = function () {\n        this._binding.scope = literal_types_1.BindingScopeEnum.Transient;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    return BindingInSyntax;\n}());\nexports.BindingInSyntax = BindingInSyntax;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/syntax/binding_when_on_syntax.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binding_when_syntax_1 = require(\"./binding_when_syntax\");\nvar binding_on_syntax_1 = require(\"./binding_on_syntax\");\nvar BindingWhenOnSyntax = (function () {\n    function BindingWhenOnSyntax(binding) {\n        this._binding = binding;\n        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);\n        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    }\n    BindingWhenOnSyntax.prototype.when = function (constraint) {\n        return this._bindingWhenSyntax.when(constraint);\n    };\n    BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {\n        return this._bindingWhenSyntax.whenTargetNamed(name);\n    };\n    BindingWhenOnSyntax.prototype.whenTargetIsDefault = function () {\n        return this._bindingWhenSyntax.whenTargetIsDefault();\n    };\n    BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenTargetTagged(tag, value);\n    };\n    BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {\n        return this._bindingWhenSyntax.whenInjectedInto(parent);\n    };\n    BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {\n        return this._bindingWhenSyntax.whenParentNamed(name);\n    };\n    BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenParentTagged(tag, value);\n    };\n    BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);\n    };\n    BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);\n    };\n    BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {\n        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);\n    };\n    BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);\n    };\n    BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {\n        return this._bindingWhenSyntax.whenNoAncestorNamed(name);\n    };\n    BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);\n    };\n    BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);\n    };\n    BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);\n    };\n    BindingWhenOnSyntax.prototype.onActivation = function (handler) {\n        return this._bindingOnSyntax.onActivation(handler);\n    };\n    return BindingWhenOnSyntax;\n}());\nexports.BindingWhenOnSyntax = BindingWhenOnSyntax;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/syntax/binding_when_syntax.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binding_on_syntax_1 = require(\"./binding_on_syntax\");\nvar constraint_helpers_1 = require(\"./constraint_helpers\");\nvar BindingWhenSyntax = (function () {\n    function BindingWhenSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingWhenSyntax.prototype.when = function (constraint) {\n        this._binding.constraint = constraint;\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {\n        this._binding.constraint = constraint_helpers_1.namedConstraint(name);\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetIsDefault = function () {\n        this._binding.constraint = function (request) {\n            var targetIsDefault = (request.target !== null) &&\n                (request.target.isNamed() === false) &&\n                (request.target.isTagged() === false);\n            return targetIsDefault;\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {\n        this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenParentNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.namedConstraint(name)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    return BindingWhenSyntax;\n}());\nexports.BindingWhenSyntax = BindingWhenSyntax;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/syntax/binding_on_syntax.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binding_when_syntax_1 = require(\"./binding_when_syntax\");\nvar BindingOnSyntax = (function () {\n    function BindingOnSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingOnSyntax.prototype.onActivation = function (handler) {\n        this._binding.onActivation = handler;\n        return new binding_when_syntax_1.BindingWhenSyntax(this._binding);\n    };\n    return BindingOnSyntax;\n}());\nexports.BindingOnSyntax = BindingOnSyntax;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/syntax/constraint_helpers.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata_1 = require(\"../planning/metadata\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar traverseAncerstors = function (request, constraint) {\n    var parent = request.parentRequest;\n    if (parent !== null) {\n        return constraint(parent) ? true : traverseAncerstors(parent, constraint);\n    }\n    else {\n        return false;\n    }\n};\nexports.traverseAncerstors = traverseAncerstors;\nvar taggedConstraint = function (key) { return function (value) {\n    var constraint = function (request) {\n        return request !== null && request.target !== null && request.target.matchesTag(key)(value);\n    };\n    constraint.metaData = new metadata_1.Metadata(key, value);\n    return constraint;\n}; };\nexports.taggedConstraint = taggedConstraint;\nvar namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);\nexports.namedConstraint = namedConstraint;\nvar typeConstraint = function (type) { return function (request) {\n    var binding = null;\n    if (request !== null) {\n        binding = request.bindings[0];\n        if (typeof type === \"string\") {\n            var serviceIdentifier = binding.serviceIdentifier;\n            return serviceIdentifier === type;\n        }\n        else {\n            var constructor = request.bindings[0].implementationType;\n            return type === constructor;\n        }\n    }\n    return false;\n}; };\nexports.typeConstraint = typeConstraint;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/container/container_snapshot.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContainerSnapshot = (function () {\n    function ContainerSnapshot() {\n    }\n    ContainerSnapshot.of = function (bindings, middleware) {\n        var snapshot = new ContainerSnapshot();\n        snapshot.bindings = bindings;\n        snapshot.middleware = middleware;\n        return snapshot;\n    };\n    return ContainerSnapshot;\n}());\nexports.ContainerSnapshot = ContainerSnapshot;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/planning/metadata_reader.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar MetadataReader = (function () {\n    function MetadataReader() {\n    }\n    MetadataReader.prototype.getConstrucotorMetadata = function (constructorFunc) {\n        var compilerGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, constructorFunc);\n        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED, constructorFunc);\n        return {\n            compilerGeneratedMetadata: compilerGeneratedMetadata,\n            userGeneratedMetadata: userGeneratedMetadata || {}\n        };\n    };\n    MetadataReader.prototype.getPropertiesMetadata = function (constructorFunc) {\n        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED_PROP, constructorFunc) || [];\n        return userGeneratedMetadata;\n    };\n    return MetadataReader;\n}());\nexports.MetadataReader = MetadataReader;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/container/container_module.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar guid_1 = require(\"../utils/guid\");\nvar ContainerModule = (function () {\n    function ContainerModule(registry) {\n        this.guid = guid_1.guid();\n        this.registry = registry;\n    }\n    return ContainerModule;\n}());\nexports.ContainerModule = ContainerModule;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/annotation/injectable.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar ERRORS_MSGS = require(\"../constants/error_msgs\");\nfunction injectable() {\n    return function (target) {\n        if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target) === true) {\n            throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);\n        }\n        var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];\n        Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);\n        return target;\n    };\n}\nexports.injectable = injectable;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/annotation/tagged.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nfunction tagged(metadataKey, metadataValue) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.Metadata(metadataKey, metadataValue);\n        if (typeof index === \"number\") {\n            decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        }\n        else {\n            decorator_utils_1.tagProperty(target, targetKey, metadata);\n        }\n    };\n}\nexports.tagged = tagged;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/annotation/decorator_utils.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nfunction tagParameter(annotationTarget, propertyName, parameterIndex, metadata) {\n    var metadataKey = METADATA_KEY.TAGGED;\n    _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex);\n}\nexports.tagParameter = tagParameter;\nfunction tagProperty(annotationTarget, propertyName, metadata) {\n    var metadataKey = METADATA_KEY.TAGGED_PROP;\n    _tagParameterOrProperty(metadataKey, annotationTarget.constructor, propertyName, metadata);\n}\nexports.tagProperty = tagProperty;\nfunction _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex) {\n    var paramsOrPropertiesMetadata = {};\n    var isParameterDecorator = (typeof parameterIndex === \"number\");\n    var key = (parameterIndex !== undefined && isParameterDecorator) ? parameterIndex.toString() : propertyName;\n    if (isParameterDecorator === true && propertyName !== undefined) {\n        throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);\n    }\n    if (Reflect.hasOwnMetadata(metadataKey, annotationTarget) === true) {\n        paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);\n    }\n    var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];\n    if (Array.isArray(paramOrPropertyMetadata) !== true) {\n        paramOrPropertyMetadata = [];\n    }\n    else {\n        for (var i = 0; i < paramOrPropertyMetadata.length; i++) {\n            var m = paramOrPropertyMetadata[i];\n            if (m.key === metadata.key) {\n                throw new Error(ERROR_MSGS.DUPLICATED_METADATA + \" \" + m.key);\n            }\n        }\n    }\n    paramOrPropertyMetadata.push(metadata);\n    paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;\n    Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);\n}\nfunction _decorate(decorators, target) {\n    Reflect.decorate(decorators, target);\n}\nfunction _param(paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); };\n}\nfunction decorate(decorator, target, parameterIndex) {\n    if (typeof parameterIndex === \"number\") {\n        _decorate([_param(parameterIndex, decorator)], target);\n    }\n    else {\n        _decorate([decorator], target);\n    }\n}\nexports.decorate = decorate;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/annotation/named.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction named(name) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, name);\n        if (typeof index === \"number\") {\n            decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        }\n        else {\n            decorator_utils_1.tagProperty(target, targetKey, metadata);\n        }\n    };\n}\nexports.named = named;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/annotation/inject.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction inject(serviceIdentifier) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.Metadata(METADATA_KEY.INJECT_TAG, serviceIdentifier);\n        if (typeof index === \"number\") {\n            decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        }\n        else {\n            decorator_utils_1.tagProperty(target, targetKey, metadata);\n        }\n    };\n}\nexports.inject = inject;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/annotation/optional.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction optional() {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.Metadata(METADATA_KEY.OPTIONAL_TAG, true);\n        if (typeof index === \"number\") {\n            decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        }\n        else {\n            decorator_utils_1.tagProperty(target, targetKey, metadata);\n        }\n    };\n}\nexports.optional = optional;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/annotation/unmanaged.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction unmanaged() {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.Metadata(METADATA_KEY.UNMANAGED_TAG, true);\n        decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n    };\n}\nexports.unmanaged = unmanaged;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/annotation/multi_inject.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction multiInject(serviceIdentifier) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.Metadata(METADATA_KEY.MULTI_INJECT_TAG, serviceIdentifier);\n        if (typeof index === \"number\") {\n            decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        }\n        else {\n            decorator_utils_1.tagProperty(target, targetKey, metadata);\n        }\n    };\n}\nexports.multiInject = multiInject;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/lib/annotation/target_name.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction targetName(name) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.Metadata(METADATA_KEY.NAME_TAG, name);\n        decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n    };\n}\nexports.targetName = targetName;\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/inversify.js":"define([\"require\", \"exports\", \"./container/container\", \"./container/container_module\", \"./annotation/injectable\", \"./annotation/tagged\", \"./annotation/named\", \"./annotation/inject\", \"./annotation/optional\", \"./annotation/unmanaged\", \"./annotation/multi_inject\", \"./annotation/target_name\", \"./utils/guid\", \"./annotation/decorator_utils\", \"./syntax/constraint_helpers\", \"./utils/serialization\"], function (require, exports, container_1, container_module_1, injectable_1, tagged_1, named_1, inject_1, optional_1, unmanaged_1, multi_inject_1, target_name_1, guid_1, decorator_utils_1, constraint_helpers_1, serialization_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Container = container_1.Container;\n    exports.ContainerModule = container_module_1.ContainerModule;\n    exports.injectable = injectable_1.injectable;\n    exports.tagged = tagged_1.tagged;\n    exports.named = named_1.named;\n    exports.inject = inject_1.inject;\n    exports.optional = optional_1.optional;\n    exports.unmanaged = unmanaged_1.unmanaged;\n    exports.multiInject = multi_inject_1.multiInject;\n    exports.targetName = target_name_1.targetName;\n    exports.guid = guid_1.guid;\n    exports.decorate = decorator_utils_1.decorate;\n    exports.traverseAncerstors = constraint_helpers_1.traverseAncerstors;\n    exports.taggedConstraint = constraint_helpers_1.taggedConstraint;\n    exports.namedConstraint = constraint_helpers_1.namedConstraint;\n    exports.typeConstraint = constraint_helpers_1.typeConstraint;\n    exports.getServiceIdentifierAsString = serialization_1.getServiceIdentifierAsString;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/annotation/decorator_utils.js":"define([\"require\", \"exports\", \"../constants/metadata_keys\", \"../constants/error_msgs\"], function (require, exports, METADATA_KEY, ERROR_MSGS) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function tagParameter(annotationTarget, propertyName, parameterIndex, metadata) {\n        var metadataKey = METADATA_KEY.TAGGED;\n        _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex);\n    }\n    exports.tagParameter = tagParameter;\n    function tagProperty(annotationTarget, propertyName, metadata) {\n        var metadataKey = METADATA_KEY.TAGGED_PROP;\n        _tagParameterOrProperty(metadataKey, annotationTarget.constructor, propertyName, metadata);\n    }\n    exports.tagProperty = tagProperty;\n    function _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex) {\n        var paramsOrPropertiesMetadata = {};\n        var isParameterDecorator = (typeof parameterIndex === \"number\");\n        var key = (parameterIndex !== undefined && isParameterDecorator) ? parameterIndex.toString() : propertyName;\n        if (isParameterDecorator === true && propertyName !== undefined) {\n            throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);\n        }\n        if (Reflect.hasOwnMetadata(metadataKey, annotationTarget) === true) {\n            paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);\n        }\n        var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];\n        if (Array.isArray(paramOrPropertyMetadata) !== true) {\n            paramOrPropertyMetadata = [];\n        }\n        else {\n            for (var i = 0; i < paramOrPropertyMetadata.length; i++) {\n                var m = paramOrPropertyMetadata[i];\n                if (m.key === metadata.key) {\n                    throw new Error(ERROR_MSGS.DUPLICATED_METADATA + \" \" + m.key);\n                }\n            }\n        }\n        paramOrPropertyMetadata.push(metadata);\n        paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;\n        Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);\n    }\n    function _decorate(decorators, target) {\n        Reflect.decorate(decorators, target);\n    }\n    function _param(paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    }\n    function decorate(decorator, target, parameterIndex) {\n        if (typeof parameterIndex === \"number\") {\n            _decorate([_param(parameterIndex, decorator)], target);\n        }\n        else {\n            _decorate([decorator], target);\n        }\n    }\n    exports.decorate = decorate;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/annotation/injectable.js":"define([\"require\", \"exports\", \"../constants/metadata_keys\", \"../constants/error_msgs\"], function (require, exports, METADATA_KEY, ERRORS_MSGS) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function injectable() {\n        return function (target) {\n            if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target) === true) {\n                throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);\n            }\n            var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];\n            Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);\n            return target;\n        };\n    }\n    exports.injectable = injectable;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/annotation/inject.js":"define([\"require\", \"exports\", \"../planning/metadata\", \"./decorator_utils\", \"../constants/metadata_keys\"], function (require, exports, metadata_1, decorator_utils_1, METADATA_KEY) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function inject(serviceIdentifier) {\n        return function (target, targetKey, index) {\n            var metadata = new metadata_1.Metadata(METADATA_KEY.INJECT_TAG, serviceIdentifier);\n            if (typeof index === \"number\") {\n                decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n            }\n            else {\n                decorator_utils_1.tagProperty(target, targetKey, metadata);\n            }\n        };\n    }\n    exports.inject = inject;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/annotation/multi_inject.js":"define([\"require\", \"exports\", \"../planning/metadata\", \"./decorator_utils\", \"../constants/metadata_keys\"], function (require, exports, metadata_1, decorator_utils_1, METADATA_KEY) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function multiInject(serviceIdentifier) {\n        return function (target, targetKey, index) {\n            var metadata = new metadata_1.Metadata(METADATA_KEY.MULTI_INJECT_TAG, serviceIdentifier);\n            if (typeof index === \"number\") {\n                decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n            }\n            else {\n                decorator_utils_1.tagProperty(target, targetKey, metadata);\n            }\n        };\n    }\n    exports.multiInject = multiInject;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/annotation/named.js":"define([\"require\", \"exports\", \"../planning/metadata\", \"./decorator_utils\", \"../constants/metadata_keys\"], function (require, exports, metadata_1, decorator_utils_1, METADATA_KEY) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function named(name) {\n        return function (target, targetKey, index) {\n            var metadata = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, name);\n            if (typeof index === \"number\") {\n                decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n            }\n            else {\n                decorator_utils_1.tagProperty(target, targetKey, metadata);\n            }\n        };\n    }\n    exports.named = named;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/annotation/optional.js":"define([\"require\", \"exports\", \"../planning/metadata\", \"./decorator_utils\", \"../constants/metadata_keys\"], function (require, exports, metadata_1, decorator_utils_1, METADATA_KEY) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function optional() {\n        return function (target, targetKey, index) {\n            var metadata = new metadata_1.Metadata(METADATA_KEY.OPTIONAL_TAG, true);\n            if (typeof index === \"number\") {\n                decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n            }\n            else {\n                decorator_utils_1.tagProperty(target, targetKey, metadata);\n            }\n        };\n    }\n    exports.optional = optional;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/annotation/tagged.js":"define([\"require\", \"exports\", \"../planning/metadata\", \"./decorator_utils\"], function (require, exports, metadata_1, decorator_utils_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function tagged(metadataKey, metadataValue) {\n        return function (target, targetKey, index) {\n            var metadata = new metadata_1.Metadata(metadataKey, metadataValue);\n            if (typeof index === \"number\") {\n                decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n            }\n            else {\n                decorator_utils_1.tagProperty(target, targetKey, metadata);\n            }\n        };\n    }\n    exports.tagged = tagged;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/annotation/target_name.js":"define([\"require\", \"exports\", \"../planning/metadata\", \"./decorator_utils\", \"../constants/metadata_keys\"], function (require, exports, metadata_1, decorator_utils_1, METADATA_KEY) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function targetName(name) {\n        return function (target, targetKey, index) {\n            var metadata = new metadata_1.Metadata(METADATA_KEY.NAME_TAG, name);\n            decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        };\n    }\n    exports.targetName = targetName;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/annotation/unmanaged.js":"define([\"require\", \"exports\", \"../planning/metadata\", \"./decorator_utils\", \"../constants/metadata_keys\"], function (require, exports, metadata_1, decorator_utils_1, METADATA_KEY) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function unmanaged() {\n        return function (target, targetKey, index) {\n            var metadata = new metadata_1.Metadata(METADATA_KEY.UNMANAGED_TAG, true);\n            decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        };\n    }\n    exports.unmanaged = unmanaged;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/bindings/binding_count.js":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var BindingCount = {\n        MultipleBindingsAvailable: 2,\n        NoBindingsAvailable: 0,\n        OnlyOneBindingAvailable: 1\n    };\n    exports.BindingCount = BindingCount;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/bindings/binding.js":"define([\"require\", \"exports\", \"../utils/guid\", \"../constants/literal_types\"], function (require, exports, guid_1, literal_types_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Binding = (function () {\n        function Binding(serviceIdentifier, defaultScope) {\n            this.guid = guid_1.guid();\n            this.activated = false;\n            this.serviceIdentifier = serviceIdentifier;\n            this.scope = defaultScope;\n            this.type = literal_types_1.BindingTypeEnum.Invalid;\n            this.constraint = function (request) { return true; };\n            this.implementationType = null;\n            this.cache = null;\n            this.factory = null;\n            this.provider = null;\n            this.onActivation = null;\n            this.dynamicValue = null;\n        }\n        Binding.prototype.clone = function () {\n            var clone = new Binding(this.serviceIdentifier, this.scope);\n            clone.activated = false;\n            clone.implementationType = this.implementationType;\n            clone.dynamicValue = this.dynamicValue;\n            clone.scope = this.scope;\n            clone.type = this.type;\n            clone.factory = this.factory;\n            clone.provider = this.provider;\n            clone.constraint = this.constraint;\n            clone.onActivation = this.onActivation;\n            clone.cache = this.cache;\n            return clone;\n        };\n        return Binding;\n    }());\n    exports.Binding = Binding;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/constants/error_msgs.js":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.DUPLICATED_INJECTABLE_DECORATOR = \"Cannot apply @injectable decorator multiple times.\";\n    exports.DUPLICATED_METADATA = \"Metadata key was used more than once in a parameter:\";\n    exports.NULL_ARGUMENT = \"NULL argument\";\n    exports.KEY_NOT_FOUND = \"Key Not Found\";\n    exports.AMBIGUOUS_MATCH = \"Ambiguous match found for serviceIdentifier:\";\n    exports.CANNOT_UNBIND = \"Could not unbind serviceIdentifier:\";\n    exports.NOT_REGISTERED = \"No matching bindings found for serviceIdentifier:\";\n    exports.MISSING_INJECTABLE_ANNOTATION = \"Missing required @injectable annotation in:\";\n    exports.MISSING_INJECT_ANNOTATION = \"Missing required @inject or @multiInject annotation in:\";\n    exports.CIRCULAR_DEPENDENCY = \"Circular dependency found:\";\n    exports.NOT_IMPLEMENTED = \"Sorry, this feature is not fully implemented yet.\";\n    exports.INVALID_BINDING_TYPE = \"Invalid binding type:\";\n    exports.NO_MORE_SNAPSHOTS_AVAILABLE = \"No snapshot available to restore.\";\n    exports.INVALID_MIDDLEWARE_RETURN = \"Invalid return type in middleware. Middleware must return!\";\n    exports.INVALID_FUNCTION_BINDING = \"Value provided to function binding must be a function!\";\n    exports.INVALID_TO_SELF_VALUE = \"The toSelf function can only be applied when a constructor is \" +\n        \"used as service identifier\";\n    exports.INVALID_DECORATOR_OPERATION = \"The @inject @multiInject @tagged and @named decorators \" +\n        \"must be applied to the parameters of a class constructor or a class property.\";\n    exports.ARGUMENTS_LENGTH_MISMATCH_1 = \"The number of constructor arguments in the derived class \";\n    exports.ARGUMENTS_LENGTH_MISMATCH_2 = \" must be >= than the number of constructor arguments of its base class.\";\n    exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = \"Invalid Container constructor argument. Container options \" +\n        \"must be an object.\";\n    exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = \"Invalid Container option. Default scope must \" +\n        \"be a string ('singleton' or 'transient').\";\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/constants/literal_types.js":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var BindingScopeEnum = {\n        Singleton: \"Singleton\",\n        Transient: \"Transient\"\n    };\n    exports.BindingScopeEnum = BindingScopeEnum;\n    var BindingTypeEnum = {\n        ConstantValue: \"ConstantValue\",\n        Constructor: \"Constructor\",\n        DynamicValue: \"DynamicValue\",\n        Factory: \"Factory\",\n        Function: \"Function\",\n        Instance: \"Instance\",\n        Invalid: \"Invalid\",\n        Provider: \"Provider\"\n    };\n    exports.BindingTypeEnum = BindingTypeEnum;\n    var TargetTypeEnum = {\n        ClassProperty: \"ClassProperty\",\n        ConstructorArgument: \"ConstructorArgument\",\n        Variable: \"Variable\"\n    };\n    exports.TargetTypeEnum = TargetTypeEnum;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/constants/metadata_keys.js":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.NAMED_TAG = \"named\";\n    exports.NAME_TAG = \"name\";\n    exports.UNMANAGED_TAG = \"unmanaged\";\n    exports.OPTIONAL_TAG = \"optional\";\n    exports.INJECT_TAG = \"inject\";\n    exports.MULTI_INJECT_TAG = \"multi_inject\";\n    exports.TAGGED = \"inversify:tagged\";\n    exports.TAGGED_PROP = \"inversify:tagged_props\";\n    exports.PARAM_TYPES = \"inversify:paramtypes\";\n    exports.DESIGN_PARAM_TYPES = \"design:paramtypes\";\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/container/container.js":"define([\"require\", \"exports\", \"../bindings/binding\", \"./lookup\", \"../planning/planner\", \"../resolution/resolver\", \"../syntax/binding_to_syntax\", \"../utils/serialization\", \"./container_snapshot\", \"../utils/guid\", \"../constants/error_msgs\", \"../constants/metadata_keys\", \"../constants/literal_types\", \"../planning/metadata_reader\"], function (require, exports, binding_1, lookup_1, planner_1, resolver_1, binding_to_syntax_1, serialization_1, container_snapshot_1, guid_1, ERROR_MSGS, METADATA_KEY, literal_types_1, metadata_reader_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Container = (function () {\n        function Container(containerOptions) {\n            if (containerOptions !== undefined) {\n                if (typeof containerOptions !== \"object\") {\n                    throw new Error(\"\" + ERROR_MSGS.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT);\n                }\n                else if (containerOptions.defaultScope === undefined) {\n                    throw new Error(\"\" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);\n                }\n                else if (containerOptions.defaultScope !== literal_types_1.BindingScopeEnum.Singleton &&\n                    containerOptions.defaultScope !== literal_types_1.BindingScopeEnum.Transient) {\n                    throw new Error(\"\" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);\n                }\n                this.options = {\n                    defaultScope: containerOptions.defaultScope\n                };\n            }\n            else {\n                this.options = {\n                    defaultScope: literal_types_1.BindingScopeEnum.Transient\n                };\n            }\n            this.guid = guid_1.guid();\n            this._bindingDictionary = new lookup_1.Lookup();\n            this._snapshots = [];\n            this._middleware = null;\n            this.parent = null;\n            this._metadataReader = new metadata_reader_1.MetadataReader();\n        }\n        Container.merge = function (container1, container2) {\n            var container = new Container();\n            var bindingDictionary = planner_1.getBindingDictionary(container);\n            var bindingDictionary1 = planner_1.getBindingDictionary(container1);\n            var bindingDictionary2 = planner_1.getBindingDictionary(container2);\n            function copyDictionary(origing, destination) {\n                origing.traverse(function (key, value) {\n                    value.forEach(function (binding) {\n                        destination.add(binding.serviceIdentifier, binding.clone());\n                    });\n                });\n            }\n            copyDictionary(bindingDictionary1, bindingDictionary);\n            copyDictionary(bindingDictionary2, bindingDictionary);\n            return container;\n        };\n        Container.prototype.load = function () {\n            var _this = this;\n            var modules = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                modules[_i] = arguments[_i];\n            }\n            var setModuleId = function (bindingToSyntax, moduleId) {\n                bindingToSyntax._binding.moduleId = moduleId;\n            };\n            var getBindFunction = function (moduleId) {\n                return function (serviceIdentifier) {\n                    var bindingToSyntax = _this.bind.call(_this, serviceIdentifier);\n                    setModuleId(bindingToSyntax, moduleId);\n                    return bindingToSyntax;\n                };\n            };\n            var getUnbindFunction = function (moduleId) {\n                return function (serviceIdentifier) {\n                    var _unbind = _this.unbind.bind(_this);\n                    _unbind(serviceIdentifier);\n                };\n            };\n            var getIsboundFunction = function (moduleId) {\n                return function (serviceIdentifier) {\n                    var _isBound = _this.isBound.bind(_this);\n                    return _isBound(serviceIdentifier);\n                };\n            };\n            var getRebindFunction = function (moduleId) {\n                return function (serviceIdentifier) {\n                    var bindingToSyntax = _this.rebind.call(_this, serviceIdentifier);\n                    setModuleId(bindingToSyntax, moduleId);\n                    return bindingToSyntax;\n                };\n            };\n            modules.forEach(function (module) {\n                var bindFunction = getBindFunction(module.guid);\n                var unbindFunction = getUnbindFunction(module.guid);\n                var isboundFunction = getIsboundFunction(module.guid);\n                var rebindFunction = getRebindFunction(module.guid);\n                module.registry(bindFunction, unbindFunction, isboundFunction, rebindFunction);\n            });\n        };\n        Container.prototype.unload = function () {\n            var _this = this;\n            var modules = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                modules[_i] = arguments[_i];\n            }\n            var conditionFactory = function (expected) { return function (item) {\n                return item.moduleId === expected;\n            }; };\n            modules.forEach(function (module) {\n                var condition = conditionFactory(module.guid);\n                _this._bindingDictionary.removeByCondition(condition);\n            });\n        };\n        Container.prototype.bind = function (serviceIdentifier) {\n            var defaultScope = literal_types_1.BindingScopeEnum.Transient;\n            defaultScope = (this.options.defaultScope === defaultScope) ? defaultScope : literal_types_1.BindingScopeEnum.Singleton;\n            var binding = new binding_1.Binding(serviceIdentifier, defaultScope);\n            this._bindingDictionary.add(serviceIdentifier, binding);\n            return new binding_to_syntax_1.BindingToSyntax(binding);\n        };\n        Container.prototype.rebind = function (serviceIdentifier) {\n            this.unbind(serviceIdentifier);\n            return this.bind(serviceIdentifier);\n        };\n        Container.prototype.unbind = function (serviceIdentifier) {\n            try {\n                this._bindingDictionary.remove(serviceIdentifier);\n            }\n            catch (e) {\n                throw new Error(ERROR_MSGS.CANNOT_UNBIND + \" \" + serialization_1.getServiceIdentifierAsString(serviceIdentifier));\n            }\n        };\n        Container.prototype.unbindAll = function () {\n            this._bindingDictionary = new lookup_1.Lookup();\n        };\n        Container.prototype.isBound = function (serviceIdentifier) {\n            return this._bindingDictionary.hasKey(serviceIdentifier);\n        };\n        Container.prototype.isBoundNamed = function (serviceIdentifier, named) {\n            return this.isBoundTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\n        };\n        Container.prototype.isBoundTagged = function (serviceIdentifier, key, value) {\n            var bindings = this._bindingDictionary.get(serviceIdentifier);\n            var request = planner_1.createMockRequest(this, serviceIdentifier, key, value);\n            return bindings.some(function (b) { return b.constraint(request); });\n        };\n        Container.prototype.snapshot = function () {\n            this._snapshots.push(container_snapshot_1.ContainerSnapshot.of(this._bindingDictionary.clone(), this._middleware));\n        };\n        Container.prototype.restore = function () {\n            var snapshot = this._snapshots.pop();\n            if (snapshot === undefined) {\n                throw new Error(ERROR_MSGS.NO_MORE_SNAPSHOTS_AVAILABLE);\n            }\n            this._bindingDictionary = snapshot.bindings;\n            this._middleware = snapshot.middleware;\n        };\n        Container.prototype.createChild = function () {\n            var child = new Container();\n            child.parent = this;\n            return child;\n        };\n        Container.prototype.applyMiddleware = function () {\n            var middlewares = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                middlewares[_i] = arguments[_i];\n            }\n            var initial = (this._middleware) ? this._middleware : this._planAndResolve();\n            this._middleware = middlewares.reduce(function (prev, curr) {\n                return curr(prev);\n            }, initial);\n        };\n        Container.prototype.applyCustomMetadataReader = function (metadataReader) {\n            this._metadataReader = metadataReader;\n        };\n        Container.prototype.get = function (serviceIdentifier) {\n            return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);\n        };\n        Container.prototype.getTagged = function (serviceIdentifier, key, value) {\n            return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);\n        };\n        Container.prototype.getNamed = function (serviceIdentifier, named) {\n            return this.getTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\n        };\n        Container.prototype.getAll = function (serviceIdentifier) {\n            return this._get(true, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);\n        };\n        Container.prototype.getAllTagged = function (serviceIdentifier, key, value) {\n            return this._get(false, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);\n        };\n        Container.prototype.getAllNamed = function (serviceIdentifier, named) {\n            return this.getAllTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\n        };\n        Container.prototype.resolve = function (constructorFunction) {\n            var tempContainer = new Container();\n            tempContainer.bind(constructorFunction).toSelf();\n            tempContainer.parent = this;\n            return tempContainer.get(constructorFunction);\n        };\n        Container.prototype._get = function (avoidConstraints, isMultiInject, targetType, serviceIdentifier, key, value) {\n            var result = null;\n            var defaultArgs = {\n                avoidConstraints: avoidConstraints,\n                contextInterceptor: function (context) { return context; },\n                isMultiInject: isMultiInject,\n                key: key,\n                serviceIdentifier: serviceIdentifier,\n                targetType: targetType,\n                value: value\n            };\n            if (this._middleware) {\n                result = this._middleware(defaultArgs);\n                if (result === undefined || result === null) {\n                    throw new Error(ERROR_MSGS.INVALID_MIDDLEWARE_RETURN);\n                }\n            }\n            else {\n                result = this._planAndResolve()(defaultArgs);\n            }\n            return result;\n        };\n        Container.prototype._planAndResolve = function () {\n            var _this = this;\n            return function (args) {\n                var context = planner_1.plan(_this._metadataReader, _this, args.isMultiInject, args.targetType, args.serviceIdentifier, args.key, args.value, args.avoidConstraints);\n                context = args.contextInterceptor(context);\n                var result = resolver_1.resolve(context);\n                return result;\n            };\n        };\n        return Container;\n    }());\n    exports.Container = Container;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/container/container_module.js":"define([\"require\", \"exports\", \"../utils/guid\"], function (require, exports, guid_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var ContainerModule = (function () {\n        function ContainerModule(registry) {\n            this.guid = guid_1.guid();\n            this.registry = registry;\n        }\n        return ContainerModule;\n    }());\n    exports.ContainerModule = ContainerModule;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/container/container_snapshot.js":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var ContainerSnapshot = (function () {\n        function ContainerSnapshot() {\n        }\n        ContainerSnapshot.of = function (bindings, middleware) {\n            var snapshot = new ContainerSnapshot();\n            snapshot.bindings = bindings;\n            snapshot.middleware = middleware;\n            return snapshot;\n        };\n        return ContainerSnapshot;\n    }());\n    exports.ContainerSnapshot = ContainerSnapshot;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/container/lookup.js":"define([\"require\", \"exports\", \"../constants/error_msgs\"], function (require, exports, ERROR_MSGS) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Lookup = (function () {\n        function Lookup() {\n            this._map = new Map();\n        }\n        Lookup.prototype.getMap = function () {\n            return this._map;\n        };\n        Lookup.prototype.add = function (serviceIdentifier, value) {\n            if (serviceIdentifier === null || serviceIdentifier === undefined) {\n                throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n            }\n            ;\n            if (value === null || value === undefined) {\n                throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n            }\n            ;\n            var entry = this._map.get(serviceIdentifier);\n            if (entry !== undefined) {\n                entry.push(value);\n                this._map.set(serviceIdentifier, entry);\n            }\n            else {\n                this._map.set(serviceIdentifier, [value]);\n            }\n        };\n        Lookup.prototype.get = function (serviceIdentifier) {\n            if (serviceIdentifier === null || serviceIdentifier === undefined) {\n                throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n            }\n            var entry = this._map.get(serviceIdentifier);\n            if (entry !== undefined) {\n                return entry;\n            }\n            else {\n                throw new Error(ERROR_MSGS.KEY_NOT_FOUND);\n            }\n        };\n        Lookup.prototype.remove = function (serviceIdentifier) {\n            if (serviceIdentifier === null || serviceIdentifier === undefined) {\n                throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n            }\n            if (!this._map.delete(serviceIdentifier)) {\n                throw new Error(ERROR_MSGS.KEY_NOT_FOUND);\n            }\n        };\n        Lookup.prototype.removeByCondition = function (condition) {\n            var _this = this;\n            this._map.forEach(function (entries, key) {\n                var updatedEntries = entries.filter(function (entry) { return !condition(entry); });\n                if (updatedEntries.length > 0) {\n                    _this._map.set(key, updatedEntries);\n                }\n                else {\n                    _this._map.delete(key);\n                }\n            });\n        };\n        Lookup.prototype.hasKey = function (serviceIdentifier) {\n            if (serviceIdentifier === null || serviceIdentifier === undefined) {\n                throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n            }\n            return this._map.has(serviceIdentifier);\n        };\n        Lookup.prototype.clone = function () {\n            var copy = new Lookup();\n            this._map.forEach(function (value, key) {\n                value.forEach(function (b) { return copy.add(key, b.clone()); });\n            });\n            return copy;\n        };\n        Lookup.prototype.traverse = function (func) {\n            this._map.forEach(function (value, key) {\n                func(key, value);\n            });\n        };\n        ;\n        return Lookup;\n    }());\n    exports.Lookup = Lookup;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/interfaces/interfaces.js":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/planning/context.js":"define([\"require\", \"exports\", \"../utils/guid\"], function (require, exports, guid_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Context = (function () {\n        function Context(container) {\n            this.guid = guid_1.guid();\n            this.container = container;\n        }\n        Context.prototype.addPlan = function (plan) {\n            this.plan = plan;\n        };\n        return Context;\n    }());\n    exports.Context = Context;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/planning/metadata.js":"define([\"require\", \"exports\", \"../constants/metadata_keys\"], function (require, exports, METADATA_KEY) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Metadata = (function () {\n        function Metadata(key, value) {\n            this.key = key;\n            this.value = value;\n        }\n        Metadata.prototype.toString = function () {\n            if (this.key === METADATA_KEY.NAMED_TAG) {\n                return \"named: \" + this.value.toString() + \" \";\n            }\n            else {\n                return \"tagged: { key:\" + this.key.toString() + \", value: \" + this.value + \" }\";\n            }\n        };\n        return Metadata;\n    }());\n    exports.Metadata = Metadata;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/planning/metadata_reader.js":"define([\"require\", \"exports\", \"../constants/metadata_keys\"], function (require, exports, METADATA_KEY) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var MetadataReader = (function () {\n        function MetadataReader() {\n        }\n        MetadataReader.prototype.getConstrucotorMetadata = function (constructorFunc) {\n            var compilerGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, constructorFunc);\n            var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED, constructorFunc);\n            return {\n                compilerGeneratedMetadata: compilerGeneratedMetadata,\n                userGeneratedMetadata: userGeneratedMetadata || {}\n            };\n        };\n        MetadataReader.prototype.getPropertiesMetadata = function (constructorFunc) {\n            var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED_PROP, constructorFunc) || [];\n            return userGeneratedMetadata;\n        };\n        return MetadataReader;\n    }());\n    exports.MetadataReader = MetadataReader;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/planning/plan.js":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Plan = (function () {\n        function Plan(parentContext, rootRequest) {\n            this.parentContext = parentContext;\n            this.rootRequest = rootRequest;\n        }\n        return Plan;\n    }());\n    exports.Plan = Plan;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/planning/planner.js":"define([\"require\", \"exports\", \"./plan\", \"./context\", \"./request\", \"./target\", \"../bindings/binding_count\", \"./reflection_utils\", \"../planning/metadata\", \"../constants/error_msgs\", \"../constants/metadata_keys\", \"../constants/literal_types\", \"../utils/serialization\"], function (require, exports, plan_1, context_1, request_1, target_1, binding_count_1, reflection_utils_1, metadata_1, ERROR_MSGS, METADATA_KEY, literal_types_1, serialization_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function getBindingDictionary(cntnr) {\n        return cntnr._bindingDictionary;\n    }\n    exports.getBindingDictionary = getBindingDictionary;\n    function _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {\n        var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;\n        var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);\n        var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);\n        if (key !== undefined) {\n            var tagMetadata = new metadata_1.Metadata(key, value);\n            target.metadata.push(tagMetadata);\n        }\n        return target;\n    }\n    function _getActiveBindings(avoidConstraints, context, parentRequest, target) {\n        var bindings = getBindings(context.container, target.serviceIdentifier);\n        var activeBindings = [];\n        if (avoidConstraints === false) {\n            activeBindings = bindings.filter(function (binding) {\n                var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);\n                return binding.constraint(request);\n            });\n        }\n        else {\n            activeBindings = bindings;\n        }\n        _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);\n        return activeBindings;\n    }\n    function _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {\n        switch (bindings.length) {\n            case binding_count_1.BindingCount.NoBindingsAvailable:\n                if (target.isOptional() === true) {\n                    return bindings;\n                }\n                else {\n                    var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);\n                    var msg = ERROR_MSGS.NOT_REGISTERED;\n                    msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);\n                    msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n                    throw new Error(msg);\n                }\n            case binding_count_1.BindingCount.OnlyOneBindingAvailable:\n                if (target.isArray() === false) {\n                    return bindings;\n                }\n            case binding_count_1.BindingCount.MultipleBindingsAvailable:\n            default:\n                if (target.isArray() === false) {\n                    var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier), msg = ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifierString;\n                    msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n                    throw new Error(msg);\n                }\n                else {\n                    return bindings;\n                }\n        }\n    }\n    function _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {\n        try {\n            var activeBindings = void 0;\n            var childRequest_1;\n            if (parentRequest === null) {\n                activeBindings = _getActiveBindings(avoidConstraints, context, null, target);\n                childRequest_1 = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);\n                var plan_2 = new plan_1.Plan(context, childRequest_1);\n                context.addPlan(plan_2);\n            }\n            else {\n                activeBindings = _getActiveBindings(avoidConstraints, context, parentRequest, target);\n                childRequest_1 = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);\n            }\n            activeBindings.forEach(function (binding) {\n                var subChildRequest = null;\n                if (target.isArray()) {\n                    subChildRequest = childRequest_1.addChildRequest(binding.serviceIdentifier, binding, target);\n                }\n                else {\n                    subChildRequest = childRequest_1;\n                }\n                if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {\n                    var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);\n                    dependencies.forEach(function (dependency) {\n                        _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);\n                    });\n                }\n            });\n        }\n        catch (error) {\n            if (error instanceof RangeError && parentRequest !== null) {\n                serialization_1.circularDependencyToException(parentRequest.parentContext.plan.rootRequest);\n            }\n            else {\n                throw new Error(error.message);\n            }\n        }\n    }\n    function getBindings(container, serviceIdentifier) {\n        var bindings = [];\n        var bindingDictionary = getBindingDictionary(container);\n        if (bindingDictionary.hasKey(serviceIdentifier)) {\n            bindings = bindingDictionary.get(serviceIdentifier);\n        }\n        else if (container.parent !== null) {\n            bindings = getBindings(container.parent, serviceIdentifier);\n        }\n        return bindings;\n    }\n    function plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {\n        if (avoidConstraints === void 0) { avoidConstraints = false; }\n        var context = new context_1.Context(container);\n        var target = _createTarget(isMultiInject, targetType, serviceIdentifier, \"\", key, value);\n        _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);\n        return context;\n    }\n    exports.plan = plan;\n    function createMockRequest(container, serviceIdentifier, key, value) {\n        var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, \"\", serviceIdentifier, new metadata_1.Metadata(key, value));\n        var context = new context_1.Context(container);\n        var request = new request_1.Request(serviceIdentifier, context, null, [], target);\n        return request;\n    }\n    exports.createMockRequest = createMockRequest;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/planning/queryable_string.js":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var QueryableString = (function () {\n        function QueryableString(str) {\n            this.str = str;\n        }\n        QueryableString.prototype.startsWith = function (searchString) {\n            return this.str.indexOf(searchString) === 0;\n        };\n        QueryableString.prototype.endsWith = function (searchString) {\n            var reverseString = \"\";\n            var reverseSearchString = searchString.split(\"\").reverse().join(\"\");\n            reverseString = this.str.split(\"\").reverse().join(\"\");\n            return this.startsWith.call({ str: reverseString }, reverseSearchString);\n        };\n        QueryableString.prototype.contains = function (searchString) {\n            return (this.str.indexOf(searchString) !== -1);\n        };\n        QueryableString.prototype.equals = function (compareString) {\n            return this.str === compareString;\n        };\n        QueryableString.prototype.value = function () {\n            return this.str;\n        };\n        return QueryableString;\n    }());\n    exports.QueryableString = QueryableString;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/planning/reflection_utils.js":"define([\"require\", \"exports\", \"../utils/serialization\", \"./target\", \"../constants/error_msgs\", \"../constants/metadata_keys\", \"../constants/literal_types\"], function (require, exports, serialization_1, target_1, ERROR_MSGS, METADATA_KEY, literal_types_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function getDependencies(metadataReader, func) {\n        var constructorName = serialization_1.getFunctionName(func);\n        var targets = getTargets(metadataReader, constructorName, func, false);\n        return targets;\n    }\n    exports.getDependencies = getDependencies;\n    function getTargets(metadataReader, constructorName, func, isBaseClass) {\n        var metadata = metadataReader.getConstrucotorMetadata(func);\n        var serviceIdentifiers = metadata.compilerGeneratedMetadata;\n        if (serviceIdentifiers === undefined) {\n            var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + \" \" + constructorName + \".\";\n            throw new Error(msg);\n        }\n        var constructorArgsMetadata = metadata.userGeneratedMetadata;\n        var keys = Object.keys(constructorArgsMetadata);\n        var hasUserDeclaredUnknownInjections = (func.length === 0 && keys.length > 0);\n        var iterations = (hasUserDeclaredUnknownInjections) ? keys.length : func.length;\n        var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);\n        var propertyTargets = getClassPropsAsTargets(metadataReader, func);\n        var targets = constructorTargets.concat(propertyTargets);\n        var baseClassDepencencyCount = getBaseClassDepencencyCount(metadataReader, func);\n        if (targets.length < baseClassDepencencyCount) {\n            var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH_1 +\n                constructorName + ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH_2;\n            throw new Error(error);\n        }\n        return targets;\n    }\n    function getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {\n        var targetMetadata = constructorArgsMetadata[index.toString()] || [];\n        var metadata = formatTargetMetadata(targetMetadata);\n        var isManaged = metadata.unmanaged !== true;\n        var serviceIndentifier = serviceIdentifiers[index];\n        var injectIndentifier = (metadata.inject || metadata.multiInject);\n        serviceIndentifier = (injectIndentifier) ? (injectIndentifier) : serviceIndentifier;\n        if (isManaged === true) {\n            var isObject = serviceIndentifier === Object;\n            var isFunction = serviceIndentifier === Function;\n            var isUndefined = serviceIndentifier === undefined;\n            var isUnknownType = (isObject || isFunction || isUndefined);\n            if (isBaseClass === false && isUnknownType) {\n                var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + \" argument \" + index + \" in class \" + constructorName + \".\";\n                throw new Error(msg);\n            }\n            var target = new target_1.Target(literal_types_1.TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIndentifier);\n            target.metadata = targetMetadata;\n            return target;\n        }\n        return null;\n    }\n    function getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {\n        var targets = [];\n        for (var i = 0; i < iterations; i++) {\n            var index = i;\n            var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);\n            if (target !== null) {\n                targets.push(target);\n            }\n        }\n        return targets;\n    }\n    function getClassPropsAsTargets(metadataReader, constructorFunc) {\n        var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);\n        var targets = [];\n        var keys = Object.keys(classPropsMetadata);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var targetMetadata = classPropsMetadata[key];\n            var metadata = formatTargetMetadata(classPropsMetadata[key]);\n            var targetName = metadata.targetName || key;\n            var serviceIndentifier = (metadata.inject || metadata.multiInject);\n            var target = new target_1.Target(literal_types_1.TargetTypeEnum.ClassProperty, targetName, serviceIndentifier);\n            target.metadata = targetMetadata;\n            targets.push(target);\n        }\n        var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;\n        if (baseConstructor !== Object) {\n            var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor);\n            targets = targets.concat(baseTargets);\n        }\n        return targets;\n    }\n    function getBaseClassDepencencyCount(metadataReader, func) {\n        var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;\n        if (baseConstructor !== Object) {\n            var baseConstructorName = serialization_1.getFunctionName(func);\n            var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);\n            var metadata = targets.map(function (t) {\n                return t.metadata.filter(function (m) {\n                    return m.key === METADATA_KEY.UNMANAGED_TAG;\n                });\n            });\n            var unmanagedCount = [].concat.apply([], metadata).length;\n            var dependencyCount = targets.length - unmanagedCount;\n            if (dependencyCount > 0) {\n                return dependencyCount;\n            }\n            else {\n                return getBaseClassDepencencyCount(metadataReader, baseConstructor);\n            }\n        }\n        else {\n            return 0;\n        }\n    }\n    function formatTargetMetadata(targetMetadata) {\n        var targetMetadataMap = {};\n        targetMetadata.forEach(function (m) {\n            targetMetadataMap[m.key.toString()] = m.value;\n        });\n        return {\n            inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],\n            multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],\n            targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],\n            unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]\n        };\n    }\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/planning/request.js":"define([\"require\", \"exports\", \"../utils/guid\"], function (require, exports, guid_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Request = (function () {\n        function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {\n            this.guid = guid_1.guid();\n            this.serviceIdentifier = serviceIdentifier;\n            this.parentContext = parentContext;\n            this.parentRequest = parentRequest;\n            this.target = target;\n            this.childRequests = [];\n            this.bindings = (Array.isArray(bindings) ? bindings : [bindings]);\n        }\n        Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {\n            var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);\n            this.childRequests.push(child);\n            return child;\n        };\n        return Request;\n    }());\n    exports.Request = Request;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/planning/target.js":"define([\"require\", \"exports\", \"../planning/metadata\", \"./queryable_string\", \"../utils/guid\", \"../constants/metadata_keys\"], function (require, exports, metadata_1, queryable_string_1, guid_1, METADATA_KEY) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Target = (function () {\n        function Target(type, name, serviceIdentifier, namedOrTagged) {\n            this.guid = guid_1.guid();\n            this.type = type;\n            this.serviceIdentifier = serviceIdentifier;\n            this.name = new queryable_string_1.QueryableString(name || \"\");\n            this.metadata = new Array();\n            var metadataItem = null;\n            if (typeof namedOrTagged === \"string\") {\n                metadataItem = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);\n            }\n            else if (namedOrTagged instanceof metadata_1.Metadata) {\n                metadataItem = namedOrTagged;\n            }\n            if (metadataItem !== null) {\n                this.metadata.push(metadataItem);\n            }\n        }\n        Target.prototype.hasTag = function (key) {\n            for (var i = 0; i < this.metadata.length; i++) {\n                var m = this.metadata[i];\n                if (m.key === key) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        Target.prototype.isArray = function () {\n            return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);\n        };\n        Target.prototype.matchesArray = function (name) {\n            return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);\n        };\n        Target.prototype.isNamed = function () {\n            return this.hasTag(METADATA_KEY.NAMED_TAG);\n        };\n        Target.prototype.isTagged = function () {\n            return this.metadata.some(function (m) {\n                return (m.key !== METADATA_KEY.INJECT_TAG) &&\n                    (m.key !== METADATA_KEY.MULTI_INJECT_TAG) &&\n                    (m.key !== METADATA_KEY.NAME_TAG) &&\n                    (m.key !== METADATA_KEY.UNMANAGED_TAG) &&\n                    (m.key !== METADATA_KEY.NAMED_TAG);\n            });\n        };\n        Target.prototype.isOptional = function () {\n            return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);\n        };\n        Target.prototype.getNamedTag = function () {\n            if (this.isNamed()) {\n                return this.metadata.filter(function (m) { return m.key === METADATA_KEY.NAMED_TAG; })[0];\n            }\n            return null;\n        };\n        Target.prototype.getCustomTags = function () {\n            if (this.isTagged()) {\n                return this.metadata.filter(function (m) {\n                    return (m.key !== METADATA_KEY.INJECT_TAG) &&\n                        (m.key !== METADATA_KEY.MULTI_INJECT_TAG) &&\n                        (m.key !== METADATA_KEY.NAME_TAG) &&\n                        (m.key !== METADATA_KEY.UNMANAGED_TAG) &&\n                        (m.key !== METADATA_KEY.NAMED_TAG);\n                });\n            }\n            return null;\n        };\n        Target.prototype.matchesNamedTag = function (name) {\n            return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);\n        };\n        Target.prototype.matchesTag = function (key) {\n            var _this = this;\n            return function (value) {\n                for (var i = 0; i < _this.metadata.length; i++) {\n                    var m = _this.metadata[i];\n                    if (m.key === key && m.value === value) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        };\n        return Target;\n    }());\n    exports.Target = Target;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/resolution/instantiation.js":"define([\"require\", \"exports\", \"../constants/literal_types\"], function (require, exports, literal_types_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function _injectProperties(instance, childRequests, resolveRequest) {\n        var propertyInjectionsRequests = childRequests.filter(function (childRequest) {\n            return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ClassProperty);\n        });\n        var propertyInjections = propertyInjectionsRequests.map(function (childRequest) {\n            return resolveRequest(childRequest);\n        });\n        propertyInjectionsRequests.forEach(function (r, index) {\n            var propertyName = \"\";\n            propertyName = r.target.name.value();\n            var injection = propertyInjections[index];\n            instance[propertyName] = injection;\n        });\n        return instance;\n    }\n    function _createInstance(Func, injections) {\n        return new (Func.bind.apply(Func, [void 0].concat(injections)))();\n    }\n    function resolveInstance(constr, childRequests, resolveRequest) {\n        var result = null;\n        if (childRequests.length > 0) {\n            var constructorInjectionsRequests = childRequests.filter(function (childRequest) {\n                return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ConstructorArgument);\n            });\n            var constructorInjections = constructorInjectionsRequests.map(function (childRequest) {\n                return resolveRequest(childRequest);\n            });\n            result = _createInstance(constr, constructorInjections);\n            result = _injectProperties(result, childRequests, resolveRequest);\n        }\n        else {\n            result = new constr();\n        }\n        return result;\n    }\n    exports.resolveInstance = resolveInstance;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/resolution/resolver.js":"define([\"require\", \"exports\", \"../constants/literal_types\", \"../utils/serialization\", \"./instantiation\", \"../constants/error_msgs\"], function (require, exports, literal_types_1, serialization_1, instantiation_1, ERROR_MSGS) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function _resolveRequest(request) {\n        var bindings = request.bindings;\n        var childRequests = request.childRequests;\n        var targetIsAnAray = request.target && request.target.isArray();\n        var targetParentIsNotAnArray = !request.parentRequest ||\n            !request.parentRequest.target ||\n            !request.target ||\n            !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);\n        if (targetIsAnAray && targetParentIsNotAnArray) {\n            return childRequests.map(function (childRequest) {\n                return _resolveRequest(childRequest);\n            });\n        }\n        else {\n            var result = null;\n            if (request.target.isOptional() === true && bindings.length === 0) {\n                return undefined;\n            }\n            var binding = bindings[0];\n            var isSingleton = binding.scope === literal_types_1.BindingScopeEnum.Singleton;\n            if (isSingleton && binding.activated === true) {\n                return binding.cache;\n            }\n            if (binding.type === literal_types_1.BindingTypeEnum.ConstantValue) {\n                result = binding.cache;\n            }\n            else if (binding.type === literal_types_1.BindingTypeEnum.Function) {\n                result = binding.cache;\n            }\n            else if (binding.type === literal_types_1.BindingTypeEnum.Constructor) {\n                result = binding.implementationType;\n            }\n            else if (binding.type === literal_types_1.BindingTypeEnum.DynamicValue && binding.dynamicValue !== null) {\n                result = binding.dynamicValue(request.parentContext);\n            }\n            else if (binding.type === literal_types_1.BindingTypeEnum.Factory && binding.factory !== null) {\n                result = binding.factory(request.parentContext);\n            }\n            else if (binding.type === literal_types_1.BindingTypeEnum.Provider && binding.provider !== null) {\n                result = binding.provider(request.parentContext);\n            }\n            else if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {\n                result = instantiation_1.resolveInstance(binding.implementationType, childRequests, _resolveRequest);\n            }\n            else {\n                var serviceIdentifier = serialization_1.getServiceIdentifierAsString(request.serviceIdentifier);\n                throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + \" \" + serviceIdentifier);\n            }\n            if (typeof binding.onActivation === \"function\") {\n                result = binding.onActivation(request.parentContext, result);\n            }\n            if (isSingleton) {\n                binding.cache = result;\n                binding.activated = true;\n            }\n            return result;\n        }\n    }\n    function resolve(context) {\n        return _resolveRequest(context.plan.rootRequest);\n    }\n    exports.resolve = resolve;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/syntax/binding_in_syntax.js":"define([\"require\", \"exports\", \"../constants/literal_types\", \"./binding_when_on_syntax\"], function (require, exports, literal_types_1, binding_when_on_syntax_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var BindingInSyntax = (function () {\n        function BindingInSyntax(binding) {\n            this._binding = binding;\n        }\n        BindingInSyntax.prototype.inSingletonScope = function () {\n            this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;\n            return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n        };\n        BindingInSyntax.prototype.inTransientScope = function () {\n            this._binding.scope = literal_types_1.BindingScopeEnum.Transient;\n            return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n        };\n        return BindingInSyntax;\n    }());\n    exports.BindingInSyntax = BindingInSyntax;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/syntax/binding_in_when_on_syntax.js":"define([\"require\", \"exports\", \"./binding_in_syntax\", \"./binding_when_syntax\", \"./binding_on_syntax\"], function (require, exports, binding_in_syntax_1, binding_when_syntax_1, binding_on_syntax_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var BindingInWhenOnSyntax = (function () {\n        function BindingInWhenOnSyntax(binding) {\n            this._binding = binding;\n            this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);\n            this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);\n            this._bindingInSyntax = new binding_in_syntax_1.BindingInSyntax(binding);\n        }\n        BindingInWhenOnSyntax.prototype.inSingletonScope = function () {\n            return this._bindingInSyntax.inSingletonScope();\n        };\n        BindingInWhenOnSyntax.prototype.inTransientScope = function () {\n            return this._bindingInSyntax.inTransientScope();\n        };\n        BindingInWhenOnSyntax.prototype.when = function (constraint) {\n            return this._bindingWhenSyntax.when(constraint);\n        };\n        BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {\n            return this._bindingWhenSyntax.whenTargetNamed(name);\n        };\n        BindingInWhenOnSyntax.prototype.whenTargetIsDefault = function () {\n            return this._bindingWhenSyntax.whenTargetIsDefault();\n        };\n        BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {\n            return this._bindingWhenSyntax.whenTargetTagged(tag, value);\n        };\n        BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {\n            return this._bindingWhenSyntax.whenInjectedInto(parent);\n        };\n        BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {\n            return this._bindingWhenSyntax.whenParentNamed(name);\n        };\n        BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {\n            return this._bindingWhenSyntax.whenParentTagged(tag, value);\n        };\n        BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n            return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);\n        };\n        BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n            return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);\n        };\n        BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {\n            return this._bindingWhenSyntax.whenAnyAncestorNamed(name);\n        };\n        BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n            return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);\n        };\n        BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {\n            return this._bindingWhenSyntax.whenNoAncestorNamed(name);\n        };\n        BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n            return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);\n        };\n        BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n            return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);\n        };\n        BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n            return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);\n        };\n        BindingInWhenOnSyntax.prototype.onActivation = function (handler) {\n            return this._bindingOnSyntax.onActivation(handler);\n        };\n        return BindingInWhenOnSyntax;\n    }());\n    exports.BindingInWhenOnSyntax = BindingInWhenOnSyntax;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/syntax/binding_on_syntax.js":"define([\"require\", \"exports\", \"./binding_when_syntax\"], function (require, exports, binding_when_syntax_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var BindingOnSyntax = (function () {\n        function BindingOnSyntax(binding) {\n            this._binding = binding;\n        }\n        BindingOnSyntax.prototype.onActivation = function (handler) {\n            this._binding.onActivation = handler;\n            return new binding_when_syntax_1.BindingWhenSyntax(this._binding);\n        };\n        return BindingOnSyntax;\n    }());\n    exports.BindingOnSyntax = BindingOnSyntax;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/syntax/binding_to_syntax.js":"define([\"require\", \"exports\", \"./binding_in_when_on_syntax\", \"./binding_when_on_syntax\", \"../constants/literal_types\", \"../constants/error_msgs\"], function (require, exports, binding_in_when_on_syntax_1, binding_when_on_syntax_1, literal_types_1, ERROR_MSGS) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var BindingToSyntax = (function () {\n        function BindingToSyntax(binding) {\n            this._binding = binding;\n        }\n        BindingToSyntax.prototype.to = function (constructor) {\n            this._binding.type = literal_types_1.BindingTypeEnum.Instance;\n            this._binding.implementationType = constructor;\n            return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);\n        };\n        BindingToSyntax.prototype.toSelf = function () {\n            if (typeof this._binding.serviceIdentifier !== \"function\") {\n                throw new Error(\"\" + ERROR_MSGS.INVALID_TO_SELF_VALUE);\n            }\n            var self = this._binding.serviceIdentifier;\n            return this.to(self);\n        };\n        BindingToSyntax.prototype.toConstantValue = function (value) {\n            this._binding.type = literal_types_1.BindingTypeEnum.ConstantValue;\n            this._binding.cache = value;\n            this._binding.dynamicValue = null;\n            this._binding.implementationType = null;\n            return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n        };\n        BindingToSyntax.prototype.toDynamicValue = function (func) {\n            this._binding.type = literal_types_1.BindingTypeEnum.DynamicValue;\n            this._binding.cache = null;\n            this._binding.dynamicValue = func;\n            this._binding.implementationType = null;\n            return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);\n        };\n        BindingToSyntax.prototype.toConstructor = function (constructor) {\n            this._binding.type = literal_types_1.BindingTypeEnum.Constructor;\n            this._binding.implementationType = constructor;\n            return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n        };\n        BindingToSyntax.prototype.toFactory = function (factory) {\n            this._binding.type = literal_types_1.BindingTypeEnum.Factory;\n            this._binding.factory = factory;\n            return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n        };\n        BindingToSyntax.prototype.toFunction = function (func) {\n            if (typeof func !== \"function\") {\n                throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);\n            }\n            ;\n            var bindingWhenOnSyntax = this.toConstantValue(func);\n            this._binding.type = literal_types_1.BindingTypeEnum.Function;\n            return bindingWhenOnSyntax;\n        };\n        BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {\n            this._binding.type = literal_types_1.BindingTypeEnum.Factory;\n            this._binding.factory = function (context) {\n                return function () {\n                    return context.container.get(serviceIdentifier);\n                };\n            };\n            return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n        };\n        BindingToSyntax.prototype.toProvider = function (provider) {\n            this._binding.type = literal_types_1.BindingTypeEnum.Provider;\n            this._binding.provider = provider;\n            return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n        };\n        return BindingToSyntax;\n    }());\n    exports.BindingToSyntax = BindingToSyntax;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/syntax/binding_when_on_syntax.js":"define([\"require\", \"exports\", \"./binding_when_syntax\", \"./binding_on_syntax\"], function (require, exports, binding_when_syntax_1, binding_on_syntax_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var BindingWhenOnSyntax = (function () {\n        function BindingWhenOnSyntax(binding) {\n            this._binding = binding;\n            this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);\n            this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        }\n        BindingWhenOnSyntax.prototype.when = function (constraint) {\n            return this._bindingWhenSyntax.when(constraint);\n        };\n        BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {\n            return this._bindingWhenSyntax.whenTargetNamed(name);\n        };\n        BindingWhenOnSyntax.prototype.whenTargetIsDefault = function () {\n            return this._bindingWhenSyntax.whenTargetIsDefault();\n        };\n        BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {\n            return this._bindingWhenSyntax.whenTargetTagged(tag, value);\n        };\n        BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {\n            return this._bindingWhenSyntax.whenInjectedInto(parent);\n        };\n        BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {\n            return this._bindingWhenSyntax.whenParentNamed(name);\n        };\n        BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {\n            return this._bindingWhenSyntax.whenParentTagged(tag, value);\n        };\n        BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n            return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);\n        };\n        BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n            return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);\n        };\n        BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {\n            return this._bindingWhenSyntax.whenAnyAncestorNamed(name);\n        };\n        BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n            return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);\n        };\n        BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {\n            return this._bindingWhenSyntax.whenNoAncestorNamed(name);\n        };\n        BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n            return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);\n        };\n        BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n            return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);\n        };\n        BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n            return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);\n        };\n        BindingWhenOnSyntax.prototype.onActivation = function (handler) {\n            return this._bindingOnSyntax.onActivation(handler);\n        };\n        return BindingWhenOnSyntax;\n    }());\n    exports.BindingWhenOnSyntax = BindingWhenOnSyntax;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/syntax/binding_when_syntax.js":"define([\"require\", \"exports\", \"./binding_on_syntax\", \"./constraint_helpers\"], function (require, exports, binding_on_syntax_1, constraint_helpers_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var BindingWhenSyntax = (function () {\n        function BindingWhenSyntax(binding) {\n            this._binding = binding;\n        }\n        BindingWhenSyntax.prototype.when = function (constraint) {\n            this._binding.constraint = constraint;\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenTargetNamed = function (name) {\n            this._binding.constraint = constraint_helpers_1.namedConstraint(name);\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenTargetIsDefault = function () {\n            this._binding.constraint = function (request) {\n                var targetIsDefault = (request.target !== null) &&\n                    (request.target.isNamed() === false) &&\n                    (request.target.isTagged() === false);\n                return targetIsDefault;\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {\n            this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {\n            this._binding.constraint = function (request) {\n                return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenParentNamed = function (name) {\n            this._binding.constraint = function (request) {\n                return constraint_helpers_1.namedConstraint(name)(request.parentRequest);\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {\n            this._binding.constraint = function (request) {\n                return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n            this._binding.constraint = function (request) {\n                return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n            this._binding.constraint = function (request) {\n                return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {\n            this._binding.constraint = function (request) {\n                return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {\n            this._binding.constraint = function (request) {\n                return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n            this._binding.constraint = function (request) {\n                return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n            this._binding.constraint = function (request) {\n                return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n            this._binding.constraint = function (request) {\n                return constraint_helpers_1.traverseAncerstors(request, constraint);\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n            this._binding.constraint = function (request) {\n                return !constraint_helpers_1.traverseAncerstors(request, constraint);\n            };\n            return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n        };\n        return BindingWhenSyntax;\n    }());\n    exports.BindingWhenSyntax = BindingWhenSyntax;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/syntax/constraint_helpers.js":"define([\"require\", \"exports\", \"../planning/metadata\", \"../constants/metadata_keys\"], function (require, exports, metadata_1, METADATA_KEY) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var traverseAncerstors = function (request, constraint) {\n        var parent = request.parentRequest;\n        if (parent !== null) {\n            return constraint(parent) ? true : traverseAncerstors(parent, constraint);\n        }\n        else {\n            return false;\n        }\n    };\n    exports.traverseAncerstors = traverseAncerstors;\n    var taggedConstraint = function (key) { return function (value) {\n        var constraint = function (request) {\n            return request !== null && request.target !== null && request.target.matchesTag(key)(value);\n        };\n        constraint.metaData = new metadata_1.Metadata(key, value);\n        return constraint;\n    }; };\n    exports.taggedConstraint = taggedConstraint;\n    var namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);\n    exports.namedConstraint = namedConstraint;\n    var typeConstraint = function (type) { return function (request) {\n        var binding = null;\n        if (request !== null) {\n            binding = request.bindings[0];\n            if (typeof type === \"string\") {\n                var serviceIdentifier = binding.serviceIdentifier;\n                return serviceIdentifier === type;\n            }\n            else {\n                var constructor = request.bindings[0].implementationType;\n                return type === constructor;\n            }\n        }\n        return false;\n    }; };\n    exports.typeConstraint = typeConstraint;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/utils/guid.js":"define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n        return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" +\n            s4() + \"-\" + s4() + s4() + s4();\n    }\n    exports.guid = guid;\n});\n","/home/travis/build/npmtest/node-npmtest-inversify/node_modules/inversify/amd/utils/serialization.js":"define([\"require\", \"exports\", \"../constants/error_msgs\"], function (require, exports, ERROR_MSGS) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function getServiceIdentifierAsString(serviceIdentifier) {\n        if (typeof serviceIdentifier === \"function\") {\n            var _serviceIdentifier = serviceIdentifier;\n            return _serviceIdentifier.name;\n        }\n        else if (typeof serviceIdentifier === \"symbol\") {\n            return serviceIdentifier.toString();\n        }\n        else {\n            var _serviceIdentifier = serviceIdentifier;\n            return _serviceIdentifier;\n        }\n    }\n    exports.getServiceIdentifierAsString = getServiceIdentifierAsString;\n    function listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {\n        var registeredBindingsList = \"\";\n        var registeredBindings = getBindings(container, serviceIdentifier);\n        if (registeredBindings.length !== 0) {\n            registeredBindingsList = \"\\nRegistered bindings:\";\n            registeredBindings.forEach(function (binding) {\n                var name = \"Object\";\n                if (binding.implementationType !== null) {\n                    name = getFunctionName(binding.implementationType);\n                }\n                registeredBindingsList = registeredBindingsList + \"\\n \" + name;\n                if (binding.constraint.metaData) {\n                    registeredBindingsList = registeredBindingsList + \" - \" + binding.constraint.metaData;\n                }\n            });\n        }\n        return registeredBindingsList;\n    }\n    exports.listRegisteredBindingsForServiceIdentifier = listRegisteredBindingsForServiceIdentifier;\n    function circularDependencyToException(request, previousServiceIdentifiers) {\n        if (previousServiceIdentifiers === void 0) { previousServiceIdentifiers = []; }\n        var parentServiceIdentifier = getServiceIdentifierAsString(request.serviceIdentifier);\n        previousServiceIdentifiers.push(parentServiceIdentifier);\n        request.childRequests.forEach(function (childRequest) {\n            var childServiceIdentifier = getServiceIdentifierAsString(childRequest.serviceIdentifier);\n            if (previousServiceIdentifiers.indexOf(childServiceIdentifier) === -1) {\n                if (childRequest.childRequests.length > 0) {\n                    circularDependencyToException(childRequest, previousServiceIdentifiers);\n                }\n                else {\n                    previousServiceIdentifiers.push(childServiceIdentifier);\n                }\n            }\n            else {\n                previousServiceIdentifiers.push(childServiceIdentifier);\n                var services = previousServiceIdentifiers.reduce(function (prev, curr) {\n                    return (prev !== \"\") ? prev + \" -> \" + curr : \"\" + curr;\n                }, \"\");\n                throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + \" \" + services);\n            }\n        });\n    }\n    exports.circularDependencyToException = circularDependencyToException;\n    function listMetadataForTarget(serviceIdentifierString, target) {\n        if (target.isTagged() || target.isNamed()) {\n            var m_1 = \"\";\n            var namedTag = target.getNamedTag();\n            var otherTags = target.getCustomTags();\n            if (namedTag !== null) {\n                m_1 += namedTag.toString() + \"\\n\";\n            }\n            if (otherTags !== null) {\n                otherTags.forEach(function (tag) {\n                    m_1 += tag.toString() + \"\\n\";\n                });\n            }\n            return \" \" + serviceIdentifierString + \"\\n \" + serviceIdentifierString + \" - \" + m_1;\n        }\n        else {\n            return \" \" + serviceIdentifierString;\n        }\n    }\n    exports.listMetadataForTarget = listMetadataForTarget;\n    function getFunctionName(v) {\n        if (v.name) {\n            return v.name;\n        }\n        else {\n            var name_1 = v.toString();\n            var match = name_1.match(/^function\\s*([^\\s(]+)/);\n            return match ? match[1] : \"Anonymous function: \" + name_1;\n        }\n    }\n    exports.getFunctionName = getFunctionName;\n});\n"}